<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ascend.Windows.Forms</name>
    </assembly>
    <members>
        <member name="T:Ascend.Windows.Forms.NavigationPaneSplitBarConverter">
            <summary>
            Provides a type converter to convert expandable objects to and from various other representations.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarConverter.#ctor">
            <summary>
            Initializes a new instance of the NavigationPaneSplitBarConverter class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the Type that this TypeConverter is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="propertyValues">An System.Collections.IDictionary of new property values.</param>
            <returns>An System.Object representing the given System.Collections.IDictionary, or null if the object cannot be created. This method always returns null.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if changing a property on this object requires a call to System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary) to create a new value; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Retrieves the set of properties for this type. By default, a type does not have any properties to return. An easy implementation of this method can call the TypeDescriptor.GetProperties method for the correct data type. 
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">The value of the object to get the properties for.</param>
            <param name="attributes">An array of MemberAttribute objects that describe the properties.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if System.ComponentModel.TypeConverter.GetProperties(System.Object) should be called to find the properties of this object; otherwise, false.</returns>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPane">
            <summary>
            Represents a Windows navigation button control group with associated panels.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ShouldSerializeButton">
            <summary>
            Determines if the Button property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ResetButton">
            <summary>
            Resets the button to default values.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ShouldSerializeButtonFont">
            <summary>
            Determines if the ButtonFont property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ShouldSerializeCaptionFont">
            <summary>
            Determines if the CaptionFont property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ShouldSerializeFooter">
            <summary>
            Determines if the Footer property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ResetFooter">
            <summary>
            Resets the footer to default values.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ShouldSerializeSplitBar">
            <summary>
            Determines if the SplitBar property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ResetSplitBar">
            <summary>
            Resets the splitbar to default values.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ShouldSerializeVisibleButtonCount">
            <summary>
            Determines if the VisibleButtonCount property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ShouldSerializeCaption">
            <summary>
            Determines if the Caption property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ResetCaption">
            <summary>
            Resets the Caption to default values.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.#ctor">
            <summary>
            Initializes a new instance of the NavigationPane class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ClearPages">
            <summary>
            Clears all pages and settings from the control.
            </summary>
            <remarks>
            This method is used internally and cannot be called by your code.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
            <remarks>
            <para>
            Raising an event invokes the event handler through a delegate. For more information, Raising an Event.
            </para>
            <para>
            The OnPaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            </para>
            <para>
            Note for Inheritors:
            When overriding OnPaint in a derived class, be sure to call the base class's OnPaint method so that registered delegates receive the event.
            </para>
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnBorderChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Border has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnBorderColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control BorderColor has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnAntiAliasChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control antialias has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAntiAliasChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <param name="e">A System.Windows.Forms.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.PageAdded(Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            
            </summary>
            <param name="page">The navigationPanePage that is being added.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.SizePages">
            <summary>
            Sizes the navigation pages to the available space.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.SizePages(System.Drawing.Rectangle)">
            <summary>
            Sizes the navigation pages to the available space.
            </summary>
            <param name="rectangle">The bounds of the navigation pane page</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnMouseLeave(System.EventArgs)">
            <summary>
             Raises the MouseLeave event.
             </summary>
             <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseClick event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event. 
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnSelecting(Ascend.Windows.Forms.NavigationPaneCancelEventArgs)">
            <summary>
            Raises the Selecting event.
            </summary>
            <param name="e">A NavigationPaneCancelEventArgs that contains the event data.</param>
            <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnSelecting method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            Notes to Inheritors When overriding OnSelecting in a derived class, be sure to call the base class's OnSelecting method so that registered delegates receive the event. 
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnSelected(Ascend.Windows.Forms.NavigationPaneEventArgs)">
            <summary>
            Raises the Selected event.
            </summary>
            <param name="e">A NavigationPaneEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.PageRemoved(Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            Called when a page is removed by an external class.
            </summary>
            <param name="page">The NavigationPanePage the is being removed.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <param name="e">A System.Windows.Forms.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <param name="e">A System.Windows.Forms.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.LessButtons">
            <summary>
            Shows less buttons on the navigaiton pane.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.MoreButtons">
            <summary>
            Shows more buttons on the navigation pane.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.DeselectNavigationPage(System.String)">
            <summary>
            Makes the NavigationPage following the NavigationPage with the specified key the current NavigationPage. 
            </summary>
            <param name="key">The key in the NavigationPages collection of the NavigationPage to deselect.</param>
            <remarks>
            Use this method to programmatically deselect a particular NavigationPage in a NavigationPane. If there are at least two NavigationPages in the control, the NavigationPage following the specified NavigationPage becomes the current NavigationPage. If the specified NavigationPage is the last NavigationPage in the control, the first NavigationPage becomes the current NavigationPage.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.DeselectNavigationPage(Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            Makes the NavigationPage following the specified NavigationPage as the current NavigationPage. 
            </summary>
            <param name="page">The NavigationPage to be deselected from NavigationPages collection</param>
            <remarks>
            Use this method to programmatically deselect a particular NavigationPage in a NavigationPane. If there are at least two NavigationPages in the control, the NavigationPage following the specified NavigationPage becomes the current NavigationPage. If the specified NavigationPage is the last NavigationPage in the control, the first NavigationPage becomes the current NavigationPage.
            </remarks>       
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.DeselectNavigationPage(System.Int32)">
            <summary>
            Makes the NavigationPage following the NavigationPage with the specified index the current NavigationPage. 
            </summary>
            <param name="index">The index in the NavigationPages collection of the NavigationPage to deselect.</param>
            <remarks>
            Use this method to programmatically deselect a particular NavigationPage in a NavigationPane. If there are at least two NavigationPages in the control, the NavigationPage following the specified NavigationPage becomes the current NavigationPage. If the specified NavigationPage is the last NavigationPage in the control, the first NavigationPage becomes the current NavigationPage.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the NavigationPane and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlAdded event.
            </summary>
            <param name="e">A System.Windows.Forms.ControlEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnDeselected(Ascend.Windows.Forms.NavigationPaneEventArgs)">
            <summary>
            Raises the Deselected event.
            </summary>
            <param name="e">A NavigationPaneEventArgs that contains the event data.</param>
            <remarks>
            Raising an event invokes the event handler through a delegate. For more information, see Raising an Event.
            The OnDeselected method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            Notes to Inheritors When overriding OnDeselected in a derived class, be sure to call the base class's OnDeselected method so that registered delegates receive the event. 
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnDeselecting(Ascend.Windows.Forms.NavigationPaneCancelEventArgs)">
            <summary>
            Raises the Deselecting event.
            </summary>
            <param name="e">A NavigationPaneCancelEventArgs that contains the event data.</param>
            <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnSelecting method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            Notes to Inheritors When overriding OnSelecting in a derived class, be sure to call the base class's OnDeselecting method so that registered delegates receive the event. 
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ToString">
            <summary>
            Returns a String containing information about the control.
            </summary>
            <returns>A <see cref="T:System.String"></see> containing the name of the <see cref="T:System.ComponentModel.Component"></see>, if any, or null if the <see cref="T:System.ComponentModel.Component"></see> is unnamed.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.Reset">
            <summary>
            Resets any user customization to original design.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.SelectNavigationPage(System.Int32)">
            <summary>
            Makes the navigation page with the specified index the current navigation page.
            </summary>
            <remarks>Use this method to programmatically select a particular navigation page in a Navigation pane.</remarks>
            <param name="index">The index in the NavigationPages collection of the navigaiton page to select.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.SelectNavigationPage(System.String)">
            <summary>
            Makes the navigation page with the specified key the current navigation page.
            </summary>
            <remarks>Use this method to programmatically select a particular navigation page in a Navigation pane.</remarks>
            <param name="key">The key in the NavigationPages collection of the navigaiton page to select.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.SelectNavigationPage(Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            Makes the navigation page the current navigation page.
            </summary>
            <remarks>Use this method to programmatically select a particular navigation page in a Navigation pane.</remarks>
            <param name="page">The NavigationPanePage in the NavigationPages collection to select.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.DisableNavigationPage(System.String)">
            <summary>
            Disables the navigation page with the specified key.
            </summary>
            <remarks>Use this method to programmatically disable a particular navigation page in a Navigation pane.</remarks>
            <param name="key">The key in the NavigationPages collection of the navigaiton page to disable.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.EnableNavigationPage(System.String)">
            <summary>
            Enables the navigation page with the specified key.
            </summary>
            <remarks>Use this method to programmatically enable a particular navigation page in a Navigation pane.</remarks>
            <param name="key">The key in the NavigationPages collection of the navigaiton page to enable.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ShowButton(System.String)">
            <summary>
            Shows the button with the specified key.
            </summary>
            <param name="key">The key in the NavigationPages collection of the navigaiton page to show.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.HideButton(System.String)">
            <summary>
            Hides the button with the specified key.
            </summary>
            <param name="key">The key in the NavigationPages collection of the navigaiton page to hide.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftChanged event. 
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.OnFontChanged(System.EventArgs)">
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
            <summary>
            
            </summary>
            <param name="factor"></param>
            <param name="specified"></param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPane.InitLayout">
            <summary>
            
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPane.AntiAliasChanged">
            <summary>
            Occurs when the AntiAlias property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPane.BorderChanged">
            <summary>
            Occurs when the Border property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPane.BorderColorChanged">
            <summary>
            Occurs when the BorderColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPane.Deselected">
            <summary>
            Occurs when a NavigationPanePage is deselected.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPane.Deselecting">
            <summary>
            Occurs before a NavigationPanePage is deselected, enabling a handler to cancel the NavigationPanePage change. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPane.SelectedIndexChanged">
            <summary>
            Raised when the active navigation button index changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPane.Selecting">
            <summary>
            Occurs before a NavigationPanePage is selected, enabling a handler to cancel the NavigationPanePage change. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPane.Selected">
            <summary>
            Occurs when a NavigationPanePage is selected.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.AllowAddOrRemove">
            <summary>
            Gets or sets if the add or remove menum item is visible on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.AllowOptions">
            <summary>
            Gets or sets if the options menum item is visible on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.AntiAlias">
            <summary>
            Specifies the rendering hint for the control.
            </summary>
            <value>
            	<para>
            System.Boolean . Specifies if the rendering should use antialiasing.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.Border">
            <summary>
            Gets or sets the border for the control.
            </summary>
            <value>
            	<para>
            Border. An object of type Border representing the control's border width characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the Border property gets or sets their respective border widths inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.BorderColor">
            <summary>
            Gets or sets the border color(s) for the control.
            </summary>
            <value>
            	<para>
            BorderColor. An object of type Border representing the control's border color characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the BorderColor property gets or sets their respective border colors inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.Button">
            <summary>
            Gets or sets the button properties.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonActiveGradientHighColor">
            <summary>
            Gets or set button active gradient high color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonActiveGradientLowColor">
            <summary>
            Gets or set button active gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonBorderColor">
            <summary>
            Gets or sets the button border color on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonForeColor">
            <summary>
            Gets or sets the forecolor associated with the buttons.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonFont">
            <summary>
            Gets or sets the font associated with the buttons.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonGradientHighColor">
            <summary>
            Gets or sets the button gradient high color on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonGradientLowColor">
            <summary>
            Gets or sets the button gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonHeight">
            <summary>
            Gets or sets the navigation button height on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonHighlightGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the button when it is moused over.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonHighlightGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the button when it is moused over.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonImageAlign">
            <summary>
            The ContentAlignment associated with the button's text.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with the button's text.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ButtonTextAlign">
            <summary>
            The ContentAlignment associated with the button's text.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with the button's text.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.CaptionBorderColor">
            <summary>
            Gets or sets the border color associated with the caption.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.CaptionFont">
            <summary>
            Gets or sets the font associated with the caption.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.CaptionForeColor">
            <summary>
            Gets or sets the forecolor associated with the caption.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.CaptionHeight">
            <summary>
            Gets or sets the caption height on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.CaptionImageAlign">
            <summary>
            The ContentAlignment associated with this controls image.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with this controls image.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.CaptionTextAlign">
            <summary>
            The ContentAlignment associated with the caption's text.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with the caption's text.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.CaptionGradientHighColor">
            <summary>
            Gets or sets the caption gradient high color on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.CaptionGradientLowColor">
            <summary>
            Gets or sets the caption gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.CaptionGradientMode">
            <summary>
            Specifies the direction of a linear gradient for the caption.
            </summary>
            <value>
            	<para>
            System.Drawing.Drawing2D.LinearGradientMode . Specifies the direction of a linear gradient.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.DefaultSize">
            <summary>
            Gets the default initial size of the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.Footer">
            <summary>
            Gets or sets the footer properties.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.FooterGradientHighColor">
            <summary>
            Gets or sets the footer gradient high color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.FooterGradientLowColor">
            <summary>
            Gets or sets the footer gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.FooterHighlightGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the footer when it is moused over.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient high color of the footer when it is moused over.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.FooterHighlightGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the footer when it is moused over.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient low color of the footer when it is moused over.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.FooterHeight">
            <summary>
            Gets or sets the footer height on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.NavigationPageRectangle">
            <summary>
            Gets the NavigationPanePage rectangle.
            </summary>
            <remarks>
            The property is read only.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.NavigationPages">
            <summary>
            A collection of pages used in the navigation pane.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.SelectedNavigationPage">
            <summary>
            Represents the currently active navigation page.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.SelectedIndex">
            <summary>
            Represents the index of the currently active navigation button.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.SplitBarGradientHighColor">
            <summary>
            Gets or sets the split bar gradient high color on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.SplitBarGradientLowColor">
            <summary>
            Gets or sets the split bar gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.SplitBarHeight">
            <summary>
            Gets or sets the splitbar height on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.SplitBarBorderColor">
            <summary>
            Gets or sets the split bar border color on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.SplitBar">
            <summary>
            Gets or sets the split bar properties.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.Render">
            <summary>
            Gets the internal renderer.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.RenderMode">
            <summary>
            Specifies the painting style applied to the background in a control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ImageList">
            <summary>
            Gets or sets the ImageList that contains the Images displayed on the control. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ImageListFooter">
            <summary>
            Gets or sets the ImageList that contains the small Images displayed on the control. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.DoubleBuffered">
            <summary>
            Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.Cursor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.ImageInCaption">
            <summary>
            Gets or sets if the active button image should be shown in the caption.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.NavigationPageCount">
            <summary>
            Gets the number of navigation pages in the navigation pane. 
            </summary>
            <value>
            The number of navigation pages in the navigation pane. 
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.VisibleButtonCount">
            <summary>
            Gets or sets the current count of the visible buttons.
            </summary>
            <remarks>
            Between 0 and the total number of buttons.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.UseCompatibleTextRendering">
            <summary>
            Gets or sets a value that determines whether to use the compatible text rendering engine (GDI+) or not (GDI). 
            </summary>
            <value>
            true if the compatible text rendering engine (GDI+) is used; otherwise, false. 
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPane.Caption">
            <summary>
            Gets or sets the caption properties.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientPanel">
            <summary>
            Represents a Windows form control container with a gradient background.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.#ctor">
            <summary>
            Initializes a new instance of the GradientBackground class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.InitializeRender">
            <summary>
            Initializes the class used for rendering. 
            Rendering class must be based on IGradientReder.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
            <remarks>
            <para>
            Raising an event invokes the event handler through a delegate. For more information, Raising an Event.
            </para>
            <para>
            The OnPaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            </para>
            <para>
            Note for Inheritors:
            When overriding OnPaint in a derived class, be sure to call the base class's OnPaint method so that registered delegates receive the event.
            </para>
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the SizeChanged event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the GradientPanel and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnResize(System.EventArgs)">
            <summary>
            Fires the event indicating that the gradient panel has been resized. Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.onResize() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnPaddingChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control padding has changed. Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnPaddingChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnGradientHighColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control gradient high color has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientHighColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnGradientLowColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control gradient low color has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientLowColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnAntiAliasChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control antialias has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAntiAliasChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnBorderChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Border has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnCornerRadiusChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control CornerRadius has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnCornerRadiusChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnBorderColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control BorderColor has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnGradientModeChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control GradientMode has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientModeChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Fired when the background is painted.
            </summary>
            <param name="pevent">Paint event arguments.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnEnabledChanged(System.EventArgs)">
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnAlphaChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Alpha property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAlphaChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnWatermarkAlphaChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control WatermarkAlpha property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnWatermarkAlphaChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnWatermarkDisplayStyleChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control WatermarkDisplayStyle property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnWatermarkDisplayStyleChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnWatermarkImageChanged(System.EventArgs)">
            <summary>
            Raises the WatermarkImageChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnWatermarkImageAlignChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control watermark image alignment has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnWatermarkImageAlignChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientPanel.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftChanged event. 
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.AlphaChanged">
            <summary>
            Occurs when the Alpha property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.AntiAliasChanged">
            <summary>
            Occurs when the AntiAlias property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.BorderChanged">
            <summary>
            Occurs when the Border property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.BorderColorChanged">
            <summary>
            Occurs when the BorderColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.GradientLowColorChanged">
            <summary>
            Occurs when the GradientLowColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.GradientHighColorChanged">
            <summary>
            Occurs when the GradientHighColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.GradientModeChanged">
            <summary>
            Occurs when the GradientMode property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.CornerRadiusChanged">
            <summary>
            Occurs when the CornerRadius property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.WatermarkAlphaChanged">
            <summary>
            Occurs when the WatermarkAlpha property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.WatermarkImageAlignChanged">
            <summary>
            Occurs when the WatermarkImageAlign property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.WatermarkImageChanged">
            <summary>
            Occurs when the WatermarkImage property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientPanel.WatermarkDisplayStyleChanged">
            <summary>
            Occurs when the WatermarkDisplayStyle property changes.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.Alpha">
            <summary>
            Gets or sets the alpha (transparancy) level (0 - 255) of the fill of the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.AntiAlias">
            <summary>
            Specifies the rendering hint for the control.
            </summary>
            <value>
            <para>
            System.Boolean . Specifies if the rendering should use antialiasing.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.Border">
            <summary>
            Gets or sets the border for the control.
            </summary>
            <value>
            <para>
            Border. An object of type Border representing the control's border width characteristics.
            </para>
            <para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the Border property gets or sets their respective border widths inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.BorderColor">
            <summary>
            Gets or sets the border color(s) for the control.
            </summary>
            <value>
            <para>
            BorderColor. An object of type Border representing the control's border color characteristics.
            </para>
            <para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the BorderColor property gets or sets their respective border colors inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.CornerRadius">
            <summary>
            Gets or sets the corner radius for the control.
            </summary>
            <value>
            <para>
            CornerRadius. An object of type CornerRadius representing the control's corner radius characteristics.
            </para>
            <para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the CornerRadius property gets or sets their respective corner radius inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.GradientMode">
            <summary>
            Specifies the direction of a linear gradient.
            </summary>
            <value>
            <para>
            System.Drawing.Drawing2D.LinearGradientMode . Specifies the direction of a linear gradient.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.GradientRender">
            <summary>
            The render class.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.HighColorLuminance">
            <summary>
            Gets or sets how bright the high color will be starting at the highlight transition point.
            </summary>
            <remarks>
            1.15 by default.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.HighlightBorder">
            <summary>
            Gets or sets if the inside edge of the border should be highlighted.
            </summary>
            <remarks>
            False by default.
            </remarks>
            <value>
            true to highlight; otherwise false
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.HighlightTransitionPercent">
            <summary>
            Gets or sets the highlight transition percent.
            </summary>
            <remarks>
            .45 by default.
            The location by percent of the control where the color will transition from high to low color.
            This value is only used in glass render mode.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.LowColorLuminance">
            <summary>
            Gets or sets how bright the low color will be furthest from the highlight transition point.
            </summary>
            <remarks>
            1.2 by default.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.RenderMode">
            <summary>
            Specifies the painting style applied to the background in a control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.ShowDisabledBackgroundColor">
            <summary>
            Specifies if the background color(s) should be shown as disabled if the control's enabled property is set to false.
            </summary>
            <remarks>
            True by default.
            When a control is disabled and this property is true the background color(s) will be converted to grayscale to show that the control is not enabled.
            When a control is disabled and this property is false the background color(s) will not be changed.
            </remarks>
            <value>true or false</value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the focus to this control using the TAB key. 
            </summary>
            <value>
            true if the user can give the focus to the control using the TAB key; otherwise, false. The default is true.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.WatermarkImage">
            <summary>
            Gets or sets the image used as a watermark.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.WatermarkAlpha">
            <summary>
            Gets or sets the alpha (transparancy) level (0 - 255) of the watermark in the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.WatermarkImageAlign">
            <summary>
            The ContentAlignment associated with this controls watermark image.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with this controls watermark image.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.WatermarkDisplayStyle">
            <summary>
            Gets or sets the display style of watermark image.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientPanel.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value>
            The default Size of the control.
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneOptions">
            <summary>
            NavigationPane options dialog.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneOptions.BuildDisplayOrder(System.Collections.ArrayList)">
            <summary>
             Build new DisplayOrder for NavigationPane option
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneOptions.#ctor">
            <summary>
            Initializes a new instance of the NavigationPaneOptions class.
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.NavigationPaneOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneOptions.ParentNavigationPane">
            <summary>
            Gets or sets the parent NavigationPane.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneOptions.DisplayOrder">
            <summary>
            Gets the display order.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneOptions.HasChanges">
            <summary>
            Gets if the options dialog has changes.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientCaption">
            <summary>
            Represents a Windows caption control with a gradient background.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.#ctor">
            <summary>
            Initializes a new instance of the GradientCaption class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.InitializeRender">
            <summary>
            Initializes the class used for rendering. 
            Rendering class must be based on IGradientReder.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.StartAnimation">
            <summary>
            Starts animation of image.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.StopAnimation">
            <summary>
            Stops animation of image.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event. 
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the GradientPanel and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.OnImageChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control image has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnImageChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.OnImageAlignChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control image alignment has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnImageAlignChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.OnFontChanged(System.EventArgs)">
            <summary>
             Raises the FontChanged event.
             </summary>
             <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.OnTextAlignChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control text alignment has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnTextAlignChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
            <remarks>
            <para>
            Raising an event invokes the event handler through a delegate. For more information, Raising an Event.
            </para>
            <para>
            The OnPaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            </para>
            <para>
            Note for Inheritors:
            When overriding OnPaint in a derived class, be sure to call the base class's OnPaint method so that registered delegates receive the event.
            </para>
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>        
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the VisibleChanged event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaption.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raises the RightToLeftChanged event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientCaption.ImageChanged">
            <summary>
            Occurs when the Image property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientCaption.ImageAlignChanged">
            <summary>
            Occurs when the ImageAlign property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientCaption.TextAlignChanged">
            <summary>
            Occurs when the TextAlign property changes.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.AllowAnimation">
            <summary>
            Gets a value indicating whether the control is allowed to animate the image.
            </summary>
            <value>
            	<para>
            true if the control is allowed to animate; otherwise, false.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            The image must have time-based frames to animate. All others will ignore this setting.
            If the alpha of the control is not full (255) the control can not animate.
            If the control is not enabled or not visible the control can not animate.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.Border">
            <summary>
            Gets or sets the border for the control.
            </summary>
            <value>
            	<para>
            Border. An object of type Border representing the control's border width characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the Border property gets or sets their respective border widths inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.CanAnimate">
            <summary>
            Gets a value indicating whether the control can animate the image.
            </summary>
            <value>
            	<para>
            true if the control is Capable of animating; otherwise, false.
            </para>
            	<para>
            This property is read only.
            </para>
            </value>
            <remarks>
            AllowAnimation does not change this value.
            The image must have time-based frames to animate. All others will not animate.
            If the alpha of the control is not full (255) the control can not animate.
            If the control is not enabled or not visible the control can not animate.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value>
            The default Size of the control.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.ForeColor">
            <summary>
            Sets or returns the specified foreground color for the style. Typically, this property sets the color for the text. The default value is Empty.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.GradientMode">
            <summary>
            Specifies the direction of a linear gradient.
            </summary>
            <value>
            	<para>
            System.Drawing.Drawing2D.LinearGradientMode . Specifies the direction of a linear gradient.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.Image">
            <summary>
            The image associated with this control.
            </summary>
            <value>
            <para>
            System.Drawing.Image . The image associated with this control.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.ImageAlign">
            <summary>
            The ContentAlignment associated with this controls image.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with this controls image.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.ImageIndex">
            <summary>
            Gets or sets the image list index value of the image displayed on the control. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.ImageKey">
            <summary>
            Gets or sets the key for the image that is displayed for the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.ImageList">
            <summary>
            Gets or sets the ImageList that contains the Image displayed on the control. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.IsAnimating">
            <summary>
            Gets a value indicating whether the control is currently animating the image.
            </summary>
            <value>
            	<para>
            true if the control is currently animating; otherwise, false.
            </para>
            	<para>
            This property is read only.
            </para>
            </value>
            <remarks>
            The image must have time-based frames to animate. All others will not animate.
            If the alpha of the control is not full (255) the control can not animate.
            If the control is not enabled or not visible the control can not animate.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
            <value>
            <para>
            System.String . The text associated with this control.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.TextAlign">
            <summary>
            The ContentAlignment associated with this controls text.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with this controls text.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.UseCompatibleTextRendering">
            <summary>
            Gets or sets a value that determines whether to use the compatible text rendering engine (GDI+) or not (GDI). 
            </summary>
            <value>
            true if the compatible text rendering engine (GDI+) is used; otherwise, false. 
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaption.HidePrefix">
            <summary>
            Gets or sets a value indication whether to hide prefix in text.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneButtonProperty">
            <summary>
            User interface (UI) for representing and editing the values of objects of the supported data types in a footer.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonProperty.ShouldSerializeFont">
            <summary>
            Determines if the Font property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonProperty.#ctor(Ascend.Windows.Forms.NavigationPane)">
            <summary>
            Initializes a new instance of the NavigationPaneButtonProperty class.
            </summary>
            <param name="navigationPane">The NavigationPane control to add the property values to.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonProperty.#ctor(Ascend.Windows.Forms.NavigationPane,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.ContentAlignment)">
            <summary>
            Initializes a new instance of the NavigationPaneButtonProperty class.
            </summary>
            <param name="navigationPane"></param>
            <param name="height">The height of the button.</param>
            <param name="gradientHighColor">The gradient high color of the button.</param>
            <param name="gradientLowColor">The gradient low color of the button.</param>
            <param name="borderColor">The bordercolor of the button.</param>
            <param name="highlightGradientHighColor">The gradient high (lighter) color for the button when it is moused over.</param>
            <param name="highlightGradientLowColor">The gradient low (darker) color for the button when it is moused over.</param>
            <param name="activeGradientHighColor">The gradient high (lighter) color for the button when it is active.</param>
            <param name="activeGradientLowColor">The gradient low (darker) color for the button when it is active.</param>
            <param name="foreColor">The button forecolor.</param>
            <param name="textAlignment">The alignment of the text of the button.</param>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.NavigationPane">
            <summary>
            Gets or sets the parent NavigationPane.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.ActiveGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the button when it is active.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient high color of the button when it is active.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.ActiveGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the button when it is active.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient low color of the button when it is active.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.BorderColor">
            <summary>
            Gets or sets the border color of the button.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.Font">
            <summary>
            Gets or sets the font associated with the caption.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.ForeColor">
            <summary>
            Gets or sets the button forecolor.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.Height">
            <summary>
            Gets or sets the height of the button.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.HighlightGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the button when it is moused over.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient high color of the button when it is moused over.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.HighlightGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the button when it is moused over.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient low color of the button when it is moused over.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.ImageAlign">
            <summary>
            The ContentAlignment associated with the button image.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with the button image.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.TextAlign">
            <summary>
            The ContentAlignment associated with the button text.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with the button text.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneButtonProperty.IsDropDownResizable">
            <summary>
            Gets a value indicating whether drop-down editors should be resizable by the user.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.RenderMode">
            <summary>
            Specifies the painting style applied to the background in a control.
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.RenderMode.Flat">
            <summary>
            Indicates the use of a FlatBackgroundRender to paint.
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.RenderMode.Gradient">
            <summary>
            Indicates the use of a GradientBackgroundRender to paint.
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.RenderMode.Glass">
            <summary>
            Indicates the use of a GlassBackgroundRender to paint.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPanePageButtonConverter">
            <summary>
            Provides a type converter to convert expandable objects to and from various other representations.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonConverter.#ctor">
            <summary>
            Initializes a new instance of the NavigationPanePageButtonConverter class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the Type that this TypeConverter is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="propertyValues">An System.Collections.IDictionary of new property values.</param>
            <returns>An System.Object representing the given System.Collections.IDictionary, or null if the object cannot be created. This method always returns null.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if changing a property on this object requires a call to System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary) to create a new value; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Retrieves the set of properties for this type. By default, a type does not have any properties to return. An easy implementation of this method can call the TypeDescriptor.GetProperties method for the correct data type. 
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">The value of the object to get the properties for.</param>
            <param name="attributes">An array of MemberAttribute objects that describe the properties.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if System.ComponentModel.TypeConverter.GetProperties(System.Object) should be called to find the properties of this object; otherwise, false.</returns>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneCaptionProperty">
            <summary>
            User interface (UI) for representing and editing the values of objects of the supported data types in a header.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionProperty.ShouldSerializeFont">
            <summary>
            Determines if the Font property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionProperty.ResetFont">
            <summary>
            Resets the font to default values.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionProperty.#ctor(Ascend.Windows.Forms.NavigationPane)">
            <summary>
            Initializes a new instance of the NavigationPaneCaptionProperty class.
            </summary>
            <param name="navigationPane">The NavigationPane control to add the property values to.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionProperty.#ctor(Ascend.Windows.Forms.NavigationPane,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,System.Boolean,System.Drawing.Font,System.Drawing.Color,System.Drawing.ContentAlignment,System.Drawing.ContentAlignment,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the NavigationPaneCaptionProperty class.
            </summary>
            <param name="navigationPane"></param>
            <param name="height">The height of the caption.</param>
            <param name="gradientHighColor">The gradient high color of the caption.</param>
            <param name="gradientLowColor">The gradient low color of the caption.</param>
            <param name="gradientMode">Specifies the direction of the linear gradient for the caption.</param>
            <param name="displayImage">Should the active button image be shown in the caption.</param>
            <param name="font">The font to use in the caption.</param>
            <param name="foreColor">The forecolor to use in the caption.</param>
            <param name="imageAlign">The alignment of the inmage in the caption.</param>
            <param name="textAlign">The alignment of the text in the caption.</param>
            <param name="borderColor">The color of the border shown in the cation.</param>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.NavigationPane">
            <summary>
            Gets or sets the parent NavigationPane.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.BorderColor">
            <summary>
            Gets or sets the border color that should be shown in the caption.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.DisplayImage">
            <summary>
            Gets or sets if the active button image should be shown in the caption.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.Font">
            <summary>
            Gets or sets the font associated with the caption.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.ForeColor">
            <summary>
            Gets or sets the forecolor
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.GradientMode">
            <summary>
            Specifies the direction of the linear gradient for the caption.
            </summary>
            <value>
            	<para>
            System.Drawing.Drawing2D.LinearGradientMode . Specifies the direction of a linear gradient.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.Height">
            <summary>
            Gets or sets the height of the footer.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.ImageAlign">
            <summary>
            The ContentAlignment associated with the caption image.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with the caption image.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.TextAlign">
            <summary>
            The ContentAlignment associated with the caption text.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with the caption text.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCaptionProperty.IsDropDownResizable">
            <summary>
            Gets a value indicating whether drop-down editors should be resizable by the user.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientCaptionRender">
            <summary>
            Renders the gradient caption based on the properties.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientBackgroundRender">
            <summary>
            Renders a gradient background based on properties.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.IGradientRender">
            <summary>
            Provides an interface for gradient rendering.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.IGradientRender.Render(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Renders the gradient control.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.IGradientRender.ResetColors">
            <summary>
            Resets the colors associated with the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.IGradientRender.Alpha">
            <summary>
            Gets or sets the alpha (transparancy) level (0 - 255) of the fill of the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.IGradientRender.AntiAlias">
            <summary>
            Specifies the rendering hint for the control.
            </summary>
            <value>
            	<para>
            System.Boolean . Specifies if the rendering should use antialiasing.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.IGradientRender.Border">
            <summary>
            Gets or sets the border for the control.
            </summary>
            <remarks>For containers such as GradientPanel and GradientCaption, the Border property gets or sets their respective border widths inside the DisplayRectangle.</remarks>
            <value>
            	<para>
            Far.Border. An object of type Border representing the control's border width characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.IGradientRender.BorderColor">
            <summary>
            Gets or sets the border color(s) for the control.
            </summary>
            <remarks>For containers such as GradientPanel and GradientCaption, the BorderColor property gets or sets their respective border colors inside the DisplayRectangle.</remarks>
            <value>
            	<para>
            Far.BorderColor. An object of type Border representing the control's border color characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.IGradientRender.CornerRadius">
            <summary>
            Gets or sets the corner radius for the control.
            </summary>
            <remarks>For containers such as GradientPanel and GradientCaption, the CornerRadius property gets or sets their respective corner radius inside the DisplayRectangle.</remarks>
            <value>
            	<para>
            Far.CornerRadius. An object of type CornerRadius representing the control's corner radius characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.IGradientRender.DisplayRectangle">
            <summary>
            The display rectangle to render to.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.IGradientRender.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
            <value>
            	<para>
            System.Boolean . true if the control can respond to user interaction; otherwise, false. The default is true. 
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.IGradientRender.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.IGradientRender.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.IGradientRender.GradientMode">
            <summary>
            Specifies the direction of a linear gradient.
            </summary>
            <value>
            <para>
            System.Drawing.Drawing2D.LinearGradientMode . Specifies the direction of a linear gradient.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.IGradientRender.RenderMode">
            <summary>
            Specifies the painting style applied to the control.
            </summary>
            <value>
            <para>
            bool
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.CreateBackBrush">
            <summary>
            Creates the gradient brush needed to draw the background.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.CreateBackBrush(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates the gradient brush needed to draw the background.
            </summary>
            <param name="lowColor">The gradient low (darker) color for the control.</param>
            <param name="highColor">The gradient high (lighter) color for the control.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.CreateColors">
            <summary>
            Creates the colors used to draw the control.
            </summary>
            <remarks>
            Takes the alpha and enabled into account.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnAlphaChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Alpha property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAlphaChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnAntiAliasChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control antialias has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAntiAliasChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnBorderChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Border has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnBorderColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control BorderColor has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnCornerRadiusChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control CornerRadius has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnCornerRadiusChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnEnabledChanged(System.EventArgs)">
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnGradientHighColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control gradient high color has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientHighColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnGradientLowColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control gradient low color has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientLowColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnGradientModeChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control GradientMode has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientModeChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnPaddingChanged(System.EventArgs)">
            <summary>
            Raises the PaddingChanged event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnWatermarkAlphaChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control WatermarkAlpha property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnWatermarkAlphaChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnWatermarkImageAlignChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control watermark image alignment has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnWatermarkImageAlignChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.OnWatermarkDisplayStyleChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control watermark image display style has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnWatermarkDisplayStyleChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.#ctor">
            <summary>
            Initializes a new instance of the GradientBackground class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">true or false</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.Render(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Renders the gradient background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.SetRenderingHints(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Sets the rendering hints based on the AntiAlias property.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
            <remarks>
            This method must be called before any drawing methods are called.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.FillBackgroundPath(System.Windows.Forms.PaintEventArgs,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fiils the passed graphics path with the appropriate background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
            <param name="graphicsPath">Represents a series of connected lines and curves that is the shape of the background.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.DrawCurvedBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws a curved background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.DrawSquareBackgound(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws a square background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.ResetColors">
            <summary>
            Resets the colors associated with the control.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientBackgroundRender.GetColorLuminanceAdjusted(System.Drawing.Color,System.Double)">
            <summary>
            Adjusts the passed color's luminance to the passed luminance level.
            </summary>
            <param name="baseColor">The starting color.</param>
            <param name="luminance">The luminace level to apply to the starting color.</param>
            <returns>The new color created.</returns>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.GradientModeChanged">
            <summary>
            Occurs when the GradientMode property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.GradientLowColorChanged">
            <summary>
            Occurs when the GradientLowColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.GradientHighColorChanged">
            <summary>
            Occurs when the GradientHighColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.CornerRadiusChanged">
            <summary>
            Occurs when the CornerRadius property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.BorderColorChanged">
            <summary>
            Occurs when the BorderColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.BorderChanged">
            <summary>
            Occurs when the Border property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.AntiAliasChanged">
            <summary>
            Occurs when the AntiAlias property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.AlphaChanged">
            <summary>
            Occurs when the Alpha property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.EnabledChanged">
            <summary>
            Occurs when the Enabled property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.PaddingChanged">
            <summary>
            Occurs when the Padding property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.WatermarkImageAlignChanged">
            <summary>
            Occurs when the WatermarkImageAlign property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.WatermarkAlphaChanged">
            <summary>
            Occurs when the WatermarkAlpha property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientBackgroundRender.WatermarkDisplayStyleChanged">
            <summary>
            Occurs when the WatermarkDisplayStyle property changes.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.Alpha">
            <summary>
            Gets or sets the alpha (transparancy) level (0 - 255) of the fill of the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.BackBrush">
            <summary>
            Gets or sets the linear gradient background brush of the fill of the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.GradientMode">
            <summary>
            Specifies the direction of a linear gradient.
            </summary>
            <value>
            	<para>
            System.Drawing.Drawing2D.LinearGradientMode . Specifies the direction of a linear gradient.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.CornerRadius">
            <summary>
            Gets or sets the corner radius for the control.
            </summary>
            <value>
            	<para>
            CornerRadius. An object of type CornerRadius representing the control's corner radius characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the CornerRadius property gets or sets their respective corner radius inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.BorderColor">
            <summary>
            Gets or sets the border color(s) for the control.
            </summary>
            <value>
            	<para>
            BorderColor. An object of type Border representing the control's border color characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the BorderColor property gets or sets their respective border colors inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.Border">
            <summary>
            Gets or sets the border for the control.
            </summary>
            <value>
            	<para>
            Border. An object of type Border representing the control's border width characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the Border property gets or sets their respective border widths inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.AntiAlias">
            <summary>
            Specifies the rendering hint for the control.
            </summary>
            <value>
            	<para>
            System.Boolean . Specifies if the rendering should use antialiasing.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
            <value>
            	<para>
            System.Boolean . true if the control can respond to user interaction; otherwise, false. The default is true. 
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.DisplayRectangle">
            <summary>
            The display rectangle to render to.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.HighColorLuminance">
            <summary>
            Gets or sets how bright the high color will be starting at the highlight transition point.
            </summary>
            <remarks>
            1.15 by default.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.HighlightBorder">
            <summary>
            Gets or sets if the inside edge of the border should be highlighted.
            </summary>
            <remarks>
            False by default.
            </remarks>
            <value>
            true to highlight; otherwise false
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.HighlightTransitionPercent">
            <summary>
            Gets or sets the highlight transition percent.
            </summary>
            <remarks>
            .45 by default.
            .01 to .99.
            The location by percent of the control where the color will transition from high to low color.
            This value is only used in glass render mode.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.LowColorLuminance">
            <summary>
            Gets or sets how bright the low color will be furthest from the highlight transition point.
            </summary>
            <remarks>
            1.2 by default.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.Padding">
            <summary>
            Gets or sets the padding associated with this control.
            </summary>
            <value>
            	<para>
            System.Windows.Forms.Padding . The padding associated with this control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.RenderMode">
            <summary>
            Specifies the painting style applied to the background in a control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.RightToLeft">
            <summary>
            Gets or sets if the render is right to left.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.ShowDisabledBackgroundColor">
            <summary>
            Specifies if the background color(s) should be shown as disabled if the control's enabled property is set to false.
            </summary>
            <remarks>
            True by default.
            When a control is disabled and this property is true the background color(s) will be converted to grayscale to show that the control is not enabled.
            When a control is disabled and this property is false the background color(s) will not be changed.
            </remarks>
            <value>true or false</value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.WatermarkAlpha">
            <summary>
            Gets or sets the alpha (transparancy) level (0 - 255) of the watermark in the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.WatermarkImage">
            <summary>
            Gets or sets the image used as a watermark.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.WatermarkImageAlign">
            <summary>
            The ContentAlignment associated with this controls watermark image.
            </summary>
            <value>
            	<para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with this controls watermark image.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.WatermarkDisplayStyle">
            <summary>
            Gets or sets the display style of watermark image.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.AdjustedHighColor">
            <summary>
            Gets or sets the adjusted high color for the control.
            </summary>
            <value>
            <para>
            System.Drawing.Color.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientBackgroundRender.AdjustedLowColor">
            <summary>
            Gets or sets the adjusted low color for the control.
            </summary>
            <value>
            <para>
            System.Drawing.Color.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaptionRender.#ctor">
            <summary>
            Initializes a new instance of the GradientCaptionRender class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaptionRender.CreateForeBrush">
            <summary>
            Creates the solid brush needed to draw the foreground.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaptionRender.Render(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the text and/or the image of the control.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaptionRender.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">true or false</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaptionRender.OnForeColorChanged(System.EventArgs)">
            <summary>
            Raises the ForeColorChanged event. 
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaptionRender.OnImageAlignChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control image alignment has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnImageAlignChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaptionRender.OnImageChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control image has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnImageChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaptionRender.OnTextAlignChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control text alignment has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnTextAlignChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientCaptionRender.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientCaptionRender.ForeColorChanged">
            <summary>
            Occurs when the ForeColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientCaptionRender.ImageAlignChanged">
            <summary>
            Occurs when the ImageAlign property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientCaptionRender.ImageChanged">
            <summary>
            Occurs when the Image property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientCaptionRender.TextAlignChanged">
            <summary>
            Occurs when the TextAlign property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientCaptionRender.TextChanged">
            <summary>
            Occurs when the Image property changes. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.HidePrefix">
            <summary>
            Gets or sets a value indication whether to hide prefix in text.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.ForeColor">
            <summary>
            The color assoicated with the text.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.Image">
            <summary>
            The image associated with this control.
            </summary>
            <value>
            	<para>
            System.Drawing.Image . The image associated with this control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.ImageAlign">
            <summary>
            The ContentAlignment associated with this controls image.
            </summary>
            <value>
            	<para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with this controls image.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.InternalBottom">
            <summary>
            Gets or sets the bottom positon of internal rendering.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.InternalLeft">
            <summary>
            Gets or sets the left positon of internal rendering.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.InternalRight">
            <summary>
            Gets or sets the right positon of internal rendering.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.InternalTop">
            <summary>
            Gets or sets the top positon of internal rendering.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.IsImageFromImageList">
            <summary>
            gets or sets if the image is from an image list
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.RightToLeft">
            <summary>
            Gets or sets if the render is right to left.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
            <value>
            	<para>
            System.String . The text associated with this control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.TextAlign">
            <summary>
            The ContentAlignment associated with this controls text.
            </summary>
            <value>
            	<para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with this controls text.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.Font">
            <summary>
            Gets or sets the font associated with this control.
            </summary>
            <value>
            	<para>
            System.Drawing.Font . The font associated with this control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientCaptionRender.UseCompatibleTextRendering">
            <summary>
            Gets or sets a value that determines whether to use the compatible text rendering engine (GDI+) or not (GDI). 
            </summary>
            <value>
            true if the compatible text rendering engine (GDI+) is used; otherwise, false. 
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneFooterConverter">
            <summary>
            Provides a type converter to convert expandable objects to and from various other representations.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneFooterConverter.#ctor">
            <summary>
            Initializes a new instance of the FooterConverter class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneFooterConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneFooterConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneFooterConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneFooterConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneFooterConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the Type that this TypeConverter is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="propertyValues">An System.Collections.IDictionary of new property values.</param>
            <returns>An System.Object representing the given System.Collections.IDictionary, or null if the object cannot be created. This method always returns null.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneFooterConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if changing a property on this object requires a call to System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary) to create a new value; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneFooterConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Retrieves the set of properties for this type. By default, a type does not have any properties to return. An easy implementation of this method can call the TypeDescriptor.GetProperties method for the correct data type. 
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">The value of the object to get the properties for.</param>
            <param name="attributes">An array of MemberAttribute objects that describe the properties.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneFooterConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if System.ComponentModel.TypeConverter.GetProperties(System.Object) should be called to find the properties of this object; otherwise, false.</returns>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPanePageFooterProperty">
            <summary>
            User interface (UI) for representing and editing the values of objects of the supported data types in a footer.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageFooterProperty.#ctor(Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            Initializes a new instance of the NavigationPanePageFooterProperty class.
            </summary>
            <param name="navigationPanePage">The NavigationPanePage control to add the property values to.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageFooterProperty.#ctor(Ascend.Windows.Forms.NavigationPanePage,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the NavigationPanePageFooterProperty class.
            </summary>
            <param name="navigationPanePage">The NavigationPanePage control to add the property values to.</param>
            <param name="imageKey">The image key to use.</param>
            <param name="imageIndex">The image index to use.</param>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageFooterProperty.NavigationPanePage">
            <summary>
            Gets or sets the parent NavigationPanePage.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageFooterProperty.Image">
            <summary>
            The image associated with this control's button when minimized.
            </summary>
            <value>
            	<para>
            System.Drawing.Image . The image associated with this control's button when minimized.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageFooterProperty.ImageIndex">
            <summary>
            Gets or sets the image list index value of the image displayed on the control's button when minimized. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageFooterProperty.ImageKey">
            <summary>
            Gets or sets the image key associated with the page's button when minimized.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageFooterProperty.ImageList">
            <summary>
            Gets or sets the ImageList that contains the Image displayed on the button of the control when minimized. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageFooterProperty.IsDropDownResizable">
            <summary>
            Gets a value indicating whether drop-down editors should be resizable by the user.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPanePageButtonProperty">
            <summary>
            User interface (UI) for representing and editing the values of objects of the supported data types in a button.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ShouldSerializeActiveGradientHighColor">
            <summary>
            Determines if the ActiveGradientHighColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ShouldSerializeActiveGradientLowColor">
            <summary>
            Determines if the ActiveGradientLowColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ShouldSerializeForeColor">
            <summary>
            Determines if the ForeColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ShouldSerializeHighlightGradientHighColor">
            <summary>
            Determines if the HighlightGradientHighColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ShouldSerializeHighlightGradientLowColor">
            <summary>
            Determines if the HighlightGradientLowColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ShouldSerializeImageAlign">
            <summary>
            Determines if the ImageAlign property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ShouldSerializeGradientHighColor">
            <summary>
            Determines if the GradientHighColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ShouldSerializeGradientLowColor">
            <summary>
            Determines if the GradientLowColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ShouldSerializeButtonFont">
            <summary>
            Determines if the ButtonFont property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ResetButtonFont">
            <summary>
            Resets the button font to default values.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ShouldSerializeTextAlign">
            <summary>
            Determines if the TextAlign property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.#ctor(Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            Initializes a new instance of the NavigationPaneButtonProperty class.
            </summary>
            <param name="navigationPanePage">The NavigationPanePage control to add the property values to.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageButtonProperty.#ctor(Ascend.Windows.Forms.NavigationPanePage,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the NavigationPaneButtonProperty class.
            </summary>
            <param name="navigationPanePage"></param>        
            <param name="gradientHighColor">The gradient high color of the button.</param>
            <param name="gradientLowColor">The gradient low color of the button.</param>        
            <param name="highlightGradientHighColor">The gradient high (lighter) color for the button when it is moused over.</param>
            <param name="highlightGradientLowColor">The gradient low (darker) color for the button when it is moused over.</param>
            <param name="activeGradientHighColor">The gradient high (lighter) color for the button when it is active.</param>
            <param name="activeGradientLowColor">The gradient low (darker) color for the button when it is active.</param>
            <param name="foreColor">The button forecolor.</param>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.NavigationPanePage">
            <summary>
            Gets or sets the parent NavigationPanePage.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ActiveGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the button when it is active.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient high color of the button when it is active.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ActiveGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the button when it is active.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient low color of the button when it is active.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ForeColor">
            <summary>
            Gets or sets the button forecolor.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.HighlightGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the button when it is moused over.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient high color of the button when it is moused over.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.HighlightGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the button when it is moused over.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient low color of the button when it is moused over.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.Image">
            <summary>
            The image associated with this control.
            </summary>
            <value>
            	<para>
            System.Drawing.Image . The image associated with this control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ImageAlign">
            <summary>
            The ContentAlignment associated with this controls image.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with this controls image.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ImageIndex">
            <summary>
            Gets or sets the image list index value of the image displayed on the control. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ImageKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ImageList">
            <summary>
            Gets or sets the ImageList that contains the Image displayed on the button of the control. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ButtonFont">
            <summary>
            Gets or sets the font associated with the button.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.Text">
            <summary>
            Gets or sets the text associated with this control's button. 
            </summary>
            <value>
            The text associated with this control's button. 
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.TextAlign">
            <summary>
            The ContentAlignment associated with this controls text.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with this controls text.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.ToolTipText">
            <summary>
            The tooltip text to display.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageButtonProperty.IsDropDownResizable">
            <summary>
            Gets a value indicating whether drop-down editors should be resizable by the user.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPanePage">
            <summary>
            Used to groups collections of controls in NavigationPane.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeTextAlign">
            <summary>
            Determines if the TextAlign property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeImageAlign">
            <summary>
            Determines if the ImageAlign property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeActiveGradientHighColor">
            <summary>
            Determines if the ActiveGradientHighColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeActiveGradientLowColor">
            <summary>
            Determines if the ActiveGradientLowColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeHighlightGradientHighColor">
            <summary>
            Determines if the HighlightGradientHighColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeHighlightGradientLowColor">
            <summary>
            Determines if the HighlightGradientLowColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeGradientHighColor">
            <summary>
            Determines if the GradientHighColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeGradientLowColor">
            <summary>
            Determines if the GradientLowColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeButtonForeColor">
            <summary>
            Determines if the ButtonForeColor property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>always true</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeLocation">
            <summary>
            Determines if the Location property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeFooter">
            <summary>
            Determines if the Footer property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ShouldSerializeButton">
            <summary>
            Determines if the Button property has default values or not.
            </summary>
            <remarks>
            This method is used internally to the control and should not be called by your code.
            </remarks>
            <returns>true or false</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.ResetButton">
            <summary>
            Resets the button to default values.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.#ctor">
            <summary>
            Initializes a new instance of the NavigationPanePage clas.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.OnActiveChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control active property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnActiveChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.OnImageAlignChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control image alignment has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnImageAlignChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.OnTextAlignChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control text alignment has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnTextAlignChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePage.OnActiveGradientLowColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control ActiveGradientLowColor property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnActiveGradientLowColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPanePage.ActiveChanged">
            <summary>
            Occurs when the Active property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPanePage.ImageAlignChanged">
            <summary>
            Occurs when the ImageAlign property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPanePage.ImageIndexChanged">
            <summary>
            Occurs when the ImageIndex property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPanePage.ImageIndexFooterChanged">
            <summary>
            Occurs when the ImageIndexFooter property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPanePage.TextAlignChanged">
            <summary>
            Occurs when the TextAlign property changes on the navigation button.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPanePage.ActiveGradientLowColorChanged">
            <summary>
            Occurs when the ActiveGradientLowColor property changes. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.Text">
            <summary>
            Gets or sets the text associated with this control's button. 
            </summary>
            <value>
            The text associated with this control's text. 
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.TextAlign">
            <summary>
            The ContentAlignment associated with this controls text.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with this controls text.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ButtonRectangle">
            <summary>
            Gets or sets the button rectangle
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.Active">
            <summary>
            Specifies if the control is currently active (has focus or is selected).
            </summary>
            <value>
            	<para>
            System.Boolean . Specifies if the control is currently active (has focus or is selected).
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.Image">
            <summary>
            The image associated with this control's button.
            </summary>
            <value>
            	<para>
            System.Drawing.Image . The image associated with this control's button.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ImageAlign">
            <summary>
            The ContentAlignment associated with this controls image.
            </summary>
            <value>
            <para>
            System.Drawing.ContentAlignment . The ContentAlignment associated with this controls image.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ImageFooter">
            <summary>
            The image associated with this control when it is minimized to the footer.
            </summary>
            <value>
            	<para>
            System.Drawing.Image . The image associated with this control when it is minimized to the footer.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ButtonMinimized">
            <summary>
            Is the button minimized.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ButtonVisible">
            <summary>
            Gets or sets a value indicating whether the page navigation button is displayed. 
            </summary>
            <value>
            true if the navigation button is displayed; otherwise, false. The default is true.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ActiveGradientHighColor">
            <summary>
            Gets or set button active gradient high color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ActiveGradientLowColor">
            <summary>
            Gets or set button active gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.HighlightGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the button when it is moused over.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.HighlightGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the button when it is moused over.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.GradientHighColor">
            <summary>
            Gets or sets the button gradient high color on the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.GradientLowColor">
            <summary>
            Gets or sets the button gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ButtonFont">
            <summary>
            Gets or sets the font associated with the buttons.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ButtonForeColor">
            <summary>
            Gets or sets the forecolor associated with the buttons.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ImageIndex">
            <summary>
            Gets or sets the image list index value of the image displayed on the control's button. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ImageIndexFooter">
            <summary>
            Gets or sets the image list index value of the image displayed on the control when the button is minimized. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.Key">
            <summary>
            Gets or sets the key associated with the page.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.Margin">
            <summary>
            Gets or sets the space between controls.
            </summary>
            <value>
            A Padding representing the space between controls.
            </value>
            <remarks>
            The margin of this control is managed by the parent NavigationPane.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.MinimumSize">
            <summary>
            Gets or sets the minimum size the form can be resized to. 
            </summary>
            <value>
            A Size that represents the minimum size for the form. 
            </value>
            <remarks>
            The size of this control is controled by the parent NavigationPane.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.Size">
            <summary>
            Gets or sets the height and width of the control.
            </summary>
            <value>
            The Size that represents the height and width of the control in pixels.
            </value>
            <remarks>
            The size of this control is controled by the parent NavigationPane.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ImageKey">
            <summary>
            Gets or sets the key for the image that is displayed for the button.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ImageKeyFooter">
            <summary>
            Gets or sets the key for the image that is displayed for the buttton when minimized. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ImageList">
            <summary>
            Gets or sets the ImageList that contains the Image displayed on the control. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ImageListFooter">
            <summary>
            Gets or sets the ImageList that contains the footer Image displayed on the control. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ToolTipText">
            <summary>
            The tooltip text to display when the button is minimized.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.BackColor">
            <summary>
            Sets or returns the specified background color for the style. The default value is Window. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.Footer">
            <summary>
            Gets or sets the footer properties.
            </summary>
                    
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ForeColor">
            <summary>
            Sets or returns the specified foreground color for the style. Typically, this property sets the color for the text. The default value is WindowText. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ButtonMinimizedVisible">
            <summary>
            Gets or sets if the minimized button is visible.
            </summary>
            <value>
            true if the minimized navigation button is displayed; otherwise, false. The default is true.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.ButtonDisplayOrder">
            <summary>
            Gets or sets the display (render) order of the button.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePage.Button">
            <summary>
            Gets or sets the button properties.
            </summary>
                    
        </member>
        <member name="T:Ascend.Windows.Forms.GradientAnimation">
            <summary>
            A gradient animation control for winforms.
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.GradientAnimation.GradientAnimationRender">
            <summary>
            The render class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.#ctor">
            <summary>
            Initializes a new instance of the GradientAnimation class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the GradientPanel and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.InitializeRender">
            <summary>
            Initializes the class used for rendering. 
            Rendering class must be based on IGradientReder.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.OnAlphaChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Alpha property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAlphaChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.OnAntiAliasChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control antialias has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAntiAliasChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.OnBorderChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Border has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.OnBorderColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control BorderColor has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.OnEnabledChanged(System.EventArgs)">
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.OnGradientHighColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control gradient high color has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientHighColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.OnGradientLowColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control gradient low color has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientLowColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the SizeChanged event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.OnGradientModeChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control GradientMode has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientModeChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.Start">
            <summary>
            Starts the animation.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimation.Stop">
            <summary>
            Stops the animation.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimation.AlphaChanged">
            <summary>
            Occurs when the Alpha property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimation.AntiAliasChanged">
            <summary>
            Occurs when the AntiAlias property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimation.BorderChanged">
            <summary>
            Occurs when the Border property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimation.BorderColorChanged">
            <summary>
            Occurs when the BorderColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimation.GradientLowColorChanged">
            <summary>
            Occurs when the GradientLowColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimation.GradientHighColorChanged">
            <summary>
            Occurs when the GradientHighColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimation.GradientModeChanged">
            <summary>
            Occurs when the GradientMode property changes.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimation.Alpha">
            <summary>
            Gets or sets the alpha (transparancy) level (0 - 255) of the fill of the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimation.AntiAlias">
            <summary>
            Specifies the rendering hint for the control.
            </summary>
            <value>
            <para>
            System.Boolean . Specifies if the rendering should use antialiasing.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimation.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
            <value>
            A Color that represents the color of the control.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimation.Border">
            <summary>
            Gets or sets the border for the control.
            </summary>
            <value>
            <para>
            Border. An object of type Border representing the control's border width characteristics.
            </para>
            <para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the Border property gets or sets their respective border widths inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimation.BorderColor">
            <summary>
            Gets or sets the border color(s) for the control.
            </summary>
            <value>
            <para>
            BorderColor. An object of type Border representing the control's border color characteristics.
            </para>
            <para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the BorderColor property gets or sets their respective border colors inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimation.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimation.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimation.GradientMode">
            <summary>
            Specifies the direction of a linear gradient.
            </summary>
            <value>
            <para>
            System.Drawing.Drawing2D.LinearGradientMode . Specifies the direction of a linear gradient.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimation.Interval">
            <summary>
            The time between animations.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimation.Speed">
            <summary>
            The speed that the animation moves accross the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimation.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value>
            The default Size of the control.
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.GlassBackgroundRender">
            <summary>
            Renders a glass background based on properties.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GlassBackgroundRender.#ctor">
            <summary>
            Initializes a new instance of the GlassBackgroundRender class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GlassBackgroundRender.SetRenderingHints(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Sets the rendering hints based on the AntiAlias property.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
            <remarks>
            This method must be called before any drawing methods are called.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GlassBackgroundRender.CreateBackBrush">
            <summary>
            Creates the blended gradient brush needed to draw the background.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneRender">
            <summary>
             Renders a gradient navigation button pane based on properties.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.#ctor(Ascend.Windows.Forms.NavigationPane)">
            <summary>
            Initializes a new instance of the NavigationPaneRender class.
            </summary>
            <param name="parentControl">The parent navigation pane control.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">true or false</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.CreateColors">
            <summary>
            Creates the colors used to draw the control.
            </summary>
            <remarks>
            Takes the alpha and enabled into account.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.OnAntiAliasChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control antialias has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAntiAliasChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.OnBorderChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Border has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.OnBorderColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control BorderColor has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.OnEnabledChanged(System.EventArgs)">
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.Render(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Renders the gradient background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.SetRenderingHints(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Sets the rendering hints based on the AntiAlias property.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
            <remarks>
            This methid must be called before any drawing methods are called.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.OnBackColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control backColor has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBackColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.DrawSquareBackgound(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws a square background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneRender.ResetColors">
            <summary>
            Resets the colors associated with the control.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPaneRender.AntiAliasChanged">
            <summary>
            Occurs when the AntiAlias property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPaneRender.BorderChanged">
            <summary>
            Occurs when the Border property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPaneRender.BorderColorChanged">
            <summary>
            Occurs when the BorderColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPaneRender.BackColorChanged">
            <summary>
            Occurs when the BackColor property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPaneRender.EnabledChanged">
            <summary>
            Occurs when the Enabled property changes.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.Border">
            <summary>
            Gets or sets the border for the control.
            </summary>
            <value>
            	<para>
            Border. An object of type Border representing the control's border width characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the Border property gets or sets their respective border widths inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.BorderColor">
            <summary>
            Gets or sets the border color(s) for the control.
            </summary>
            <value>
            	<para>
            BorderColor. An object of type Border representing the control's border color characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the BorderColor property gets or sets their respective border colors inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
            <value>
            	<para>
            System.Boolean . true if the control can respond to user interaction; otherwise, false. The default is true. 
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.DisplayRectangle">
            <summary>
            The display rectangle to render to.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.AntiAlias">
            <summary>
            Specifies the rendering hint for the control.
            </summary>
            <value>
            	<para>
            System.Boolean . Specifies if the rendering should use antialiasing.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.BackColor">
            <summary>
            Specifies the back color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . Specifies the color to use on the background.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.SplitBarRectangle">
            <summary>
            Gets the splitbar display rectangle.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.SplitBarGradientHighColor">
            <summary>
            Gets or sets the split bar gradient high color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.SplitBarGradientLowColor">
            <summary>
            Gets or sets the split bar gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.SplitBarHeight">
            <summary>
            Gets or sets the split bar height.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.SplitBarBorderColor">
            <summary>
            Gets or sets the split bar border color
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.HighlightIndex">
            <summary>
            Gets or sets the current highlighted button index.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.RenderMode">
            <summary>
            Specifies the painting style applied to the background in a control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ActiveIndex">
            <summary>
            Gets or sets the current active buton index.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.FooterConfigureRectangle">
            <summary>
            Gets the footer configure display rectangle.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.FooterGradientHighColor">
            <summary>
            Gets or sets the footer gradient high color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.FooterGradientLowColor">
            <summary>
            Gets or sets the footer gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.FooterHeight">
            <summary>
            Gets or sets the footer height.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.FooterHighlightGradientHighColor">
            <summary>
            Gets or sets the footer gradient high (lighter) color for the control when it is moused over.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.FooterHighlightGradientLowColor">
            <summary>
            Gets or sets the footer gradient low (darker) color for the control when it is moused over.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ConfigureFooterHighlight">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.FooterRectangle">
            <summary>
            Gets the footer display rectangle.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.CaptionRectangle">
            <summary>
            Gets the caption display rectangle.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonActiveGradientHighColor">
            <summary>
            Gets or sets the button active gradient high color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonActiveGradientLowColor">
            <summary>
            Gets or sets the button active gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonBorderColor">
            <summary>
            Gets or sets the button border color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonForeColor">
            <summary>
            Gets or sets the button forecolor.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonFont">
            <summary>
            Gets or sets the button font.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonGradientHighColor">
            <summary>
            Gets or sets the button gradient high color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonGradientLowColor">
            <summary>
            Gets or sets the button gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonHeight">
            <summary>
            Gets or sets the buttun height
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonHighlightGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the button when it is moused over.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonHighlightGradientLowColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the button when it is moused over.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonImageAlign">
            <summary>
            Gets or sets the default button image alignment.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ButtonTextAlign">
            <summary>
            Gets or sets the default button text aligment.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.DisplayButtonCount">
            <summary>
            Gets or sets number of buttons to display (render).
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.CaptionBorderColor">
            <summary>
            Gets or sets the caption border color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.CaptionHeight">
            <summary>
            Gets or sets the caption height.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.CaptionImageAlign">
            <summary>
            gets or sets the caption image alignment.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.CaptionTextAlign">
            <summary>
            gets or sets the caption text alignment.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.CaptionFont">
            <summary>
            Gets or sets the caption font.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.CaptionForeColor">
            <summary>
            Gets or sets the caption forecolor.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.CaptionGradientHighColor">
            <summary>
            Gets or sets the caption gradient high color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.CaptionGradientLowColor">
            <summary>
            Gets or sets the caption gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.CaptionGradientMode">
            <summary>
            Specifies the direction of a linear gradient for the caption.
            </summary>
            <value>
            	<para>
            System.Drawing.Drawing2D.LinearGradientMode . Specifies the direction of a linear gradient.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.RightToLeft">
            <summary>
            Gets or sets if the control should render text right to left.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.ShowImageInCaption">
            <summary>
            Gets or sets if the currently active button image is shown in the caption.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.DisplayOrder">
            <summary>
            Gets or sets the display order list.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneRender.UseCompatibleTextRendering">
            <summary>
            Gets or sets a value that determines whether to use the compatible text rendering engine (GDI+) or not (GDI). 
            </summary>
            <value>
            true if the compatible text rendering engine (GDI+) is used; otherwise, false. 
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientSplitBarDirection">
            <summary>
            Determines the direction the gradient split bar should display
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.GradientSplitBarDirection.Horizontal">
            <summary>
            Display the gradient split basr horizontally
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.GradientSplitBarDirection.Vertical">
            <summary>
            Display the gradient split bar vertically
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientSplitBar">
            <summary>
            Represents a split bar with bumps and a gradient background.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientSplitBar.#ctor">
            <summary>
            Initializes a new instance of the GradientSplitBar class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientSplitBar.InitializeRender">
            <summary>
            Initializes the class used for rendering. 
            Rendering class must be based on IGradientReder.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientSplitBar.OnBumpCountChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control bump count has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBumpCountChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientSplitBar.OnDirectionChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control direction has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnDirectionChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientSplitBar.BumpCountChanged">
            <summary>
            Occurs when the BumpCount property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientSplitBar.DirectionChanged">
            <summary>
            Occurs when the Direction property changes.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientSplitBar.BumpCount">
            <summary>
            Specifies the number of bumps to be drawn on the split bar.
            </summary>
            <remarks>
            <para>
            Negative numbers will be converted to 0. If a bump count number is greater than the surface allows, only the amount that can be drawn will be drawn.
            </para>
            </remarks>
            <value>
            <para>
            System.Int32
            </para>
            <para>
            This property is read/write.
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientSplitBar.Direction">
            <summary>
            Specifies the direction the split bar should be drawn.
            </summary>
            <value>
            <para>
            GradientSplitBarDirection
            </para>
            <para>
            This property is read/write.
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientSplitBar.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value>
            The default Size of the control.
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientNavigationButtonRender">
            <summary>
            Renders a gradient navigation button based on properties.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonRender.#ctor">
            <summary>
            Initializes a new instance of the GradientNavigationButtonRender class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonRender.CreateBackBrush">
            <summary>
            Creates the gradient brush needed to draw the background.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonRender.OnMouseOverHighlightChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control MouseOverHighlight property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnMouseOverHighlightChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonRender.OnHighlightGradientLowColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control HighlightGradientLowColor property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnHighlightGradientLowColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonRender.OnHighlightGradientHighColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control HighlightGradientHighColor property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnHighlightGradientHighColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonRender.OnActiveOnClickChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control ActiveOnClick property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnActiveOnClickChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonRender.OnActiveGradientLowColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control ActiveGradientLowColor property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnActiveGradientLowColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonRender.OnActiveGradientHighColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control ActiveGradientHighColor property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnActiveGradientHighColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonRender.OnActiveChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control active property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnActiveChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonRender.OnHighlightChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control highlight property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnHighlightChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonRender.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">true or false</param>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButtonRender.MouseOverHighlightChanged">
            <summary>
            Occurs when the  MouseOverHighlight property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButtonRender.HighlightGradientLowColorChanged">
            <summary>
            Occurs when the  HighlightGradientLowColor property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButtonRender.HighlightGradientHighColorChanged">
            <summary>
            Occurs when the  HighlightGradientHighColor property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButtonRender.ActiveOnClickChanged">
            <summary>
            Occurs when the  ActiveOnClick property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButtonRender.ActiveGradientLowColorChanged">
            <summary>
            Occurs when the ActiveGradientLowColor property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButtonRender.ActiveGradientHighColorChanged">
            <summary>
            Occurs when the ActiveGradientHighColor property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButtonRender.ActiveChanged">
            <summary>
            Occurs when the Active property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButtonRender.HighlightChanged">
            <summary>
            Occurs when the Highlight property changes. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButtonRender.Active">
            <summary>
            Specifies if the control is currently active (has focus or is selected).
            </summary>
            <value>
            <para>
            System.Boolean . Specifies if the control is currently active (has focus or is selected).
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButtonRender.MouseOverHighlight">
            <summary>
            Specifies if the control should highlight if it is moused over.
            </summary>
            <value>
            	<para>
            System.Boolean . Specifies if the control should highlight if it is moused over.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButtonRender.HighlightGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control when it is moused over.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control when it is moused over.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButtonRender.HighlightGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control when it is moused over.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control when it is moused over.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButtonRender.ActiveOnClick">
            <summary>
            Specifies if the control should become active if clicked.
            </summary>
            <value>
            	<para>
            System.Boolean . Specifies if the control should become active if clicked.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButtonRender.ActiveGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control when it is active.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control when it is active.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButtonRender.ActiveGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control when it is active.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control when it is active.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButtonRender.Highlight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientLine">
            <summary>
            Represents a Windows form gradient line.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.#ctor">
            <summary>
            Initializes a new instance of the GradientLine class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.InitializeRender">
            <summary>
            Initializes the class used for rendering. 
            Rendering class must be based on IGradientReder.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
            <remarks>
            <para>
            Raising an event invokes the event handler through a delegate. For more information, Raising an Event.
            </para>
            <para>
            The OnPaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            </para>
            <para>
            Note for Inheritors:
            When overriding OnPaint in a derived class, be sure to call the base class's OnPaint method so that registered delegates receive the event.
            </para>
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the SizeChanged event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the GradientPanel and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.OnResize(System.EventArgs)">
            <summary>
            Fires the event indicating that the gradient panel has been resized. Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.onResize() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.OnGradientHighColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control gradient high color has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientHighColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.OnGradientLowColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control gradient low color has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientLowColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.OnAntiAliasChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control antialias has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAntiAliasChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.OnGradientModeChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control GradientMode has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientModeChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Fired when the background is painted.
            </summary>
            <param name="pevent">Paint event arguments.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.OnAlphaChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Alpha property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAlphaChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Raises the SystemColorsChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientLine.OnRightToLeftChanged(System.EventArgs)">
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientLine.AlphaChanged">
            <summary>
            Occurs when the Alpha property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientLine.AntiAliasChanged">
            <summary>
            Occurs when the AntiAlias property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientLine.GradientLowColorChanged">
            <summary>
            Occurs when the GradientLowColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientLine.GradientHighColorChanged">
            <summary>
            Occurs when the GradientHighColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientLine.GradientModeChanged">
            <summary>
            Occurs when the GradientMode property changes.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.Alpha">
            <summary>
            Gets or sets the alpha (transparancy) level (0 - 255) of the fill of the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.AntiAlias">
            <summary>
            Specifies the rendering hint for the control.
            </summary>
            <value>
            <para>
            System.Boolean . Specifies if the rendering should use antialiasing.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.GradientMode">
            <summary>
            Specifies the direction of a linear gradient.
            </summary>
            <value>
            <para>
            System.Drawing.Drawing2D.LinearGradientMode . Specifies the direction of a linear gradient.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.GradientRender">
            <summary>
            The render class.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.HighColorLuminance">
            <summary>
            Gets or sets how bright the high color will be starting at the highlight transition point.
            </summary>
            <remarks>
            1.15 by default.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.HighlightTransitionPercent">
            <summary>
            Gets or sets the highlight transition percent.
            </summary>
            <remarks>
            .45 by default.
            The location by percent of the control where the color will transition from high to low color.
            This value is only used in glass render mode.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.LowColorLuminance">
            <summary>
            Gets or sets how bright the low color will be furthest from the highlight transition point.
            </summary>
            <remarks>
            1.2 by default.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.RenderMode">
            <summary>
            Specifies the painting style applied to the background in a control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.TabStop">
            <summary>
            Gets or sets a value indicating whether the user can give the focus to this control using the TAB key. 
            </summary>
            <value>
            true if the user can give the focus to the control using the TAB key; otherwise, false. The default is true.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientLine.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value>
            The default Size of the control.
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientNavigationButtonAction">
            <summary>
            Defines values representing GradientNavigationButton events
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.GradientNavigationButtonAction.Selecting">
            <summary>
            Represents the Selecting event.
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.GradientNavigationButtonAction.Selected">
            <summary>
            Represents the Selected event
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.GradientNavigationButtonAction.Deselecting">
            <summary>
            Represents the Deselecting event
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.GradientNavigationButtonAction.Deselected">
            <summary>
            Represents the Deselected event
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientNavigationButtonCancelEventArgs">
            <summary>
            Provides data for the Selecting and Deselecting events of a GradientNavigationButton control. 
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonCancelEventArgs.#ctor(System.Boolean,Ascend.Windows.Forms.GradientNavigationButtonAction)">
            <summary>
            Initializes a new instance of the GradientNavigationButtonCancelEventArgs class.
            </summary>
            <param name="cancel">true to cancel the GradientNavigationButton change by default; otherwise, false.</param>
            <param name="action">One of the GradientNavigationButtonAction values.</param>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButtonCancelEventArgs.Action">
            <summary>
            Gets a value indicating which event is occurring. 
            </summary>
            <value>
            One of the GradientNavigationButtonAction values.
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneSplitBarProperty">
            <summary>
            User interface (UI) for representing and editing the values of objects of the supported data types in a splitbar.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarProperty.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"></see> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"></see> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"></see> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"></see> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"></see>.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarProperty.#ctor(Ascend.Windows.Forms.NavigationPane)">
            <summary>
            Initializes a new instance of the NavigationPaneSplitBarProperty class.
            </summary>
            <param name="navigationPane">The NavigationPane control to add the property values to.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneSplitBarProperty.#ctor(Ascend.Windows.Forms.NavigationPane,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the NavigationPaneSplitBarProperty class.
            </summary>
            <param name="navigationPane">The navigation pane.</param>
            <param name="height">The height of the splitbar.</param>
            <param name="gradientHighColor">The gradient high color of the split bar.</param>
            <param name="gradientLowColor">The gradient low color of the split bar.</param>
            <param name="borderColor">The color to use for the border of the split bar.</param>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneSplitBarProperty.NavigationPane">
            <summary>
            Gets or sets the parent NavigationPane.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneSplitBarProperty.Height">
            <summary>
            Gets or sets the height of the splitbar.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneSplitBarProperty.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneSplitBarProperty.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneSplitBarProperty.BorderColor">
            <summary>
            Gets or sets the border color of the split bar.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneSplitBarProperty.IsDropDownResizable">
            <summary>
            Gets a value indicating whether drop-down editors should be resizable by the user.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPanePageRender">
            <summary>
             Renders a gradient navigation button pane based on properties.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageRender.#ctor(Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            Initializes a new instance of the NavigationPaneRender class.
            </summary>
            <param name="parentControl">The parent navigation pane control.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageRender.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageRender.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">true or false</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageRender.CreateColors">
            <summary>
            Creates the colors used to draw the control.
            </summary>
            <remarks>
            Takes the alpha and enabled into account.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageRender.OnEnabledChanged(System.EventArgs)">
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageRender.Render(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Renders the gradient background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageRender.SetRenderingHints(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Sets the rendering hints based on the AntiAlias property.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
            <remarks>
            This methid must be called before any drawing methods are called.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageRender.OnBackColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control backColor has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBackColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageRender.ResetColors">
            <summary>
            Resets the colors associated with the control.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPanePageRender.BackColorChanged">
            <summary>
            Occurs when the BackColor property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.NavigationPanePageRender.EnabledChanged">
            <summary>
            Occurs when the Enabled property changes.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
            <value>
            	<para>
            System.Boolean . true if the control can respond to user interaction; otherwise, false. The default is true. 
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.BackColor">
            <summary>
            Specifies the back color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . Specifies the color to use on the background.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.RenderMode">
            <summary>
            Specifies the painting style applied to the background in a control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.ButtonActiveGradientHighColor">
            <summary>
            Gets or sets the button active gradient high color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.ButtonActiveGradientLowColor">
            <summary>
            Gets or sets the button active gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.ButtonForeColor">
            <summary>
            Gets or sets the button forecolor.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.ButtonFont">
            <summary>
            Gets or sets the button font.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.ButtonGradientHighColor">
            <summary>
            Gets or sets the button gradient high color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.ButtonGradientLowColor">
            <summary>
            Gets or sets the button gradient low color.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.ButtonHeight">
            <summary>
            Gets or sets the buttun height
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.ButtonHighlightGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the button when it is moused over.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.ButtonHighlightGradientLowColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the button when it is moused over.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.RightToLeft">
            <summary>
            Gets or sets if the control should render text right to left.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPanePageRender.UseCompatibleTextRendering">
            <summary>
            Gets or sets a value that determines whether to use the compatible text rendering engine (GDI+) or not (GDI). 
            </summary>
            <value>
            true if the compatible text rendering engine (GDI+) is used; otherwise, false. 
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPanePageFooterConverter">
            <summary>
            Provides a type converter to convert expandable objects to and from various other representations.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageFooterConverter.#ctor">
            <summary>
            Initializes a new instance of the NavigationPanePageFooterConverter class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageFooterConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageFooterConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageFooterConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageFooterConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageFooterConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the Type that this TypeConverter is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="propertyValues">An System.Collections.IDictionary of new property values.</param>
            <returns>An System.Object representing the given System.Collections.IDictionary, or null if the object cannot be created. This method always returns null.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageFooterConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if changing a property on this object requires a call to System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary) to create a new value; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageFooterConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Retrieves the set of properties for this type. By default, a type does not have any properties to return. An easy implementation of this method can call the TypeDescriptor.GetProperties method for the correct data type. 
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">The value of the object to get the properties for.</param>
            <param name="attributes">An array of MemberAttribute objects that describe the properties.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPanePageFooterConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if System.ComponentModel.TypeConverter.GetProperties(System.Object) should be called to find the properties of this object; otherwise, false.</returns>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientNavigationButton">
            <summary>
            Represents a Windows navigation button control with a gradient background.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.#ctor">
            <summary>
            Initializes a new instance of the GradientNavigationButton class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.InitializeRender">
            <summary>
            Initializes the class used for rendering. 
            Rendering class must be based on IGradientReder.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the MouseEnter event. Called when the mouse pointer moves over the control.
            </summary>
            <param name="e">System.EventArgs. An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event. Called when the mouse pointer leaves the control.
            </summary>
            <param name="e">System.EventArgs. An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event. Called when the mouse button is pressed while in the control.
            </summary>
            <param name="e">A System.Windows.Forms.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <param name="e">An System.Windows.Forms.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnActiveChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control active property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnActiveChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnActiveGradientHighColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control ActiveGradientHighColor property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnActiveGradientHighColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnActiveGradientLowColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control ActiveGradientLowColor property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnActiveGradientLowColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnActiveOnClickChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control ActiveOnClick property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnActiveOnClickChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnDehighlighted(System.EventArgs)">
            <summary>
            Raises the Dehighlighted event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
            <remarks>
            Raising an event invokes the event handler through a delegate. For more information, see Raising an Event.
            The OnDehighlighted method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            Notes to Inheritors When overriding OnDehighlighted in a derived class, be sure to call the base class's OnDehighlighted method so that registered delegates receive the event. 
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnDeselected(Ascend.Windows.Forms.GradientNavigationButtonEventArgs)">
            <summary>
            Raises the Deselected event.
            </summary>
            <param name="e">A GradientNavigationButtonEventArgs that contains the event data.</param>
            <remarks>
            Raising an event invokes the event handler through a delegate. For more information, see Raising an Event.
            The OnDeselected method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            Notes to Inheritors When overriding OnDeselected in a derived class, be sure to call the base class's OnDeselected method so that registered delegates receive the event. 
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnDeselecting(Ascend.Windows.Forms.GradientNavigationButtonCancelEventArgs)">
            <summary>
            Raises the Deselecting event.
            </summary>
            <param name="e">A GradientNavigationButtonCancelEventArgs that contains the event data.</param>
            <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnDeselecting method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            Notes to Inheritors When overriding OnDeselecting in a derived class, be sure to call the base class's OnDeselecting method so that registered delegates receive the event. 
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnEnter(System.EventArgs)">
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnGotFocus(System.EventArgs)">
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnHighlighted(System.EventArgs)">
            <summary>
            Raises the Highlighted event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
            <remarks>
            Raising an event invokes the event handler through a delegate. For more information, see Raising an Event.
            The OnHighlighted method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            Notes to Inheritors When overriding OnHighlighted in a derived class, be sure to call the base class's OnHighlighted method so that registered delegates receive the event. 
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnHighlightGradientHighColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control HighlightGradientHighColor property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnHighlightGradientHighColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnHighlightGradientLowColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control HighlightGradientLowColor property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnHighlightGradientLowColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnLeave(System.EventArgs)">
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnLostFocus(System.EventArgs)">
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnMouseOverHighlightChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that control MouseOverHighlight property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnMouseOverHighlightChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnSelected(Ascend.Windows.Forms.GradientNavigationButtonEventArgs)">
            <summary>
            Raises the Selected event.
            </summary>
            <param name="e">A GradientNavigationButtonEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnSelecting(Ascend.Windows.Forms.GradientNavigationButtonCancelEventArgs)">
            <summary>
            Raises the Selecting event.
            </summary>
            <param name="e">A GradientNavigationButtonCancelEventArgs that contains the event data.</param>
            <remarks>
            Raising an event invokes the event handler through a delegate.
            The OnSelecting method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.
            Notes to Inheritors When overriding OnSelecting in a derived class, be sure to call the base class's OnSelecting method so that registered delegates receive the event. 
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the GradientNavigationButton and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.ActiveChanged">
            <summary>
            Occurs when the Active property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.ActiveGradientHighColorChanged">
            <summary>
            Occurs when the ActiveGradientHighColor property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.ActiveGradientLowColorChanged">
            <summary>
            Occurs when the ActiveGradientLowColor property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.ActiveOnClickChanged">
            <summary>
            Occurs when the ActiveOnClick property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.Dehighlighted">
            <summary>
            Occurs when a GradientNavigationButton highlight is removed.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.Deselected">
            <summary>
            Occurs when a GradientNavigationButton is deselected.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.Deselecting">
            <summary>
            Occurs before a GradientNavigationButton is deselected, enabling a handler to cancel the GradientNavigationButton change. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.Highlighted">
            <summary>
            Occurs when a GradientNavigationButton is highlighted.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.HighlightGradientLowColorChanged">
            <summary>
            Occurs when the HighlightGradientLowColor property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.HighlightGradientHighColorChanged">
            <summary>
            Occurs when the HighlightGradientHighColor property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.MouseOverHighlightChanged">
            <summary>
            Occurs when the MouseOverHighlight property changes. 
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.Selected">
            <summary>
            Occurs when a control is selected.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientNavigationButton.Selecting">
            <summary>
            Occurs before a control is selected, enabling a handler to cancel the control change. 
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.Active">
            <summary>
            Specifies if the control is currently active (has focus or is selected).
            </summary>
            <value>
            <para>
            System.Boolean . Specifies if the control is currently active (has focus or is selected).
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.ActiveGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control when it is active.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient high color of the control when it is active.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.ActiveGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control when it is active.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient low color of the control when it is active.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.ActiveOnClick">
            <summary>
            Specifies if the control should become active if clicked.
            </summary>
            <value>
            <para>
            System.Boolean . Specifies if the control should become active if clicked.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.DefaultSize">
            <value>The default Size of the control.</value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.ForeColor">
            <summary>
            Sets or returns the specified foreground color for the style. Typically, this property sets the color for the text. The default value is MenuText.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.FocusHighlight">
            <summary>
            Specifies if the control should highlight if it has focus.
            </summary>
            <value>
            <para>
            System.Boolean . Specifies if the control should highlight if it has focus.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.HighlightGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control when it is moused over.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient high color of the control when it is moused over.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.HighlightGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control when it is moused over.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient low color of the control when it is moused over.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.MouseOverHighlight">
            <summary>
            Specifies if the control should highlight if it is moused over.
            </summary>
            <value>
            <para>
            System.Boolean . Specifies if the control should highlight if it is moused over.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.ShowBorderOnHighlight">
            <summary>
            Specifies if the control should add a 1 pixel border if the control is highlighted.
            </summary>
            <remarks>
            If a border greater than 0 is definded on any edge of the control this value will be ignored.
            The BorderColor property will be used for the color.
            </remarks>
            <value>
            <para>
            System.Boolean . Specifies if the control should add a 1 pixel border if the contro is highlighted.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButton.StayActiveAfterClick">
            <summary>
            Specifies if the button should stay active after it is clicked.
            </summary>
            <remarks>
            True by default.
            </remarks>
            <value>
            System.Boolean . If true the button will stay active after clicked.
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneFooterProperty">
            <summary>
            User interface (UI) for representing and editing the values of objects of the supported data types in a footer.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneFooterProperty.#ctor(Ascend.Windows.Forms.NavigationPane)">
            <summary>
            Initializes a new instance of the NavigationPaneFooterProperty class.
            </summary>
            <param name="navigationPane">The NavigationPane control to add the property values to.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneFooterProperty.#ctor(Ascend.Windows.Forms.NavigationPane,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the NavigationPaneFooterProperty class.
            </summary>
            <param name="navigationPane"></param>
            <param name="height">The height of the footer.</param>
            <param name="gradientHighColor">The gradient high color of the footer.</param>
            <param name="gradientLowColor">The gradient low color of the footer.</param>
            <param name="highlightGradientHighColor">The highlight gradient high color of the footer.</param>
            <param name="highlightGradientLowColor">The highlight gradient low color of the footer.</param>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneFooterProperty.NavigationPane">
            <summary>
            Gets or sets the parent NavigationPane.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneFooterProperty.Height">
            <summary>
            Gets or sets the height of the footer.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneFooterProperty.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneFooterProperty.HighlightGradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control when it is moused over.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient low color of the control when it is moused over.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneFooterProperty.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneFooterProperty.HighlightGradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control when it is moused over.
            </summary>
            <value>
            <para>
            System.Drawing.Color . A Color that represents the gradient high color of the control when it is moused over.
            </para>
            <para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneFooterProperty.IsDropDownResizable">
            <summary>
            Gets a value indicating whether drop-down editors should be resizable by the user.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneCaptionConverter">
            <summary>
            Provides a type converter to convert expandable objects to and from various other representations.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionConverter.#ctor">
            <summary>
            Initializes a new instance of the NavigationPaneCaptionConverter class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the Type that this TypeConverter is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="propertyValues">An System.Collections.IDictionary of new property values.</param>
            <returns>An System.Object representing the given System.Collections.IDictionary, or null if the object cannot be created. This method always returns null.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if changing a property on this object requires a call to System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary) to create a new value; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Retrieves the set of properties for this type. By default, a type does not have any properties to return. An easy implementation of this method can call the TypeDescriptor.GetProperties method for the correct data type. 
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">The value of the object to get the properties for.</param>
            <param name="attributes">An array of MemberAttribute objects that describe the properties.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCaptionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if System.ComponentModel.TypeConverter.GetProperties(System.Object) should be called to find the properties of this object; otherwise, false.</returns>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientAnimationRender">
            <summary>
            Renders a gradient background based on properties.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.CreateColors">
            <summary>
            Creates the colors used to draw the control.
            </summary>
            <remarks>
            Takes the alpha and enabled into account.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.OnAlphaChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Alpha property has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAlphaChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.OnAntiAliasChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control antialias has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnAntiAliasChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.OnBorderChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control Border has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.OnBorderColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control BorderColor has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBorderColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.OnCornerRadiusChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control CornerRadius has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnCornerRadiusChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.OnEnabledChanged(System.EventArgs)">
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.OnGradientHighColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control gradient high color has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientHighColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.OnGradientLowColorChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control gradient low color has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientLowColorChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.OnGradientModeChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control GradientMode has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnGradientModeChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.#ctor">
            <summary>
            Initializes a new instance of the GradientBackground class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.Dispose">
            <summary>
            Releases all resources used.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.Dispose(System.Boolean)">
            <summary>
            Releases all resources used.
            </summary>
            <param name="disposing">true or false</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.Render(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Renders the gradient background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.SetRenderingHints">
            <summary>
            Sets the rendering hints based on the AntiAlias property.
            </summary>
            <remarks>
            This methid must be called before any drawing methods are called.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.DrawSquareBackgound(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws a square background.
            </summary>
            <param name="e">Provides data for the Paint event.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.ResetColors">
            <summary>
            Resets the colors associated with the control.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.MoveNext">
            <summary>
            Moves the bitmap location to next forward position.
            </summary>
            <remarks>
            Does not cause the control to render. The render method must be called.
            </remarks>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientAnimationRender.MovePrevious">
            <summary>
            Moves the bitmap location to previous position.
            </summary>
            <remarks>
            Does not cause the control to render. The render method must be called.
            </remarks>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimationRender.GradientModeChanged">
            <summary>
            Occurs when the GradientMode property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimationRender.GradientLowColorChanged">
            <summary>
            Occurs when the GradientLowColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimationRender.GradientHighColorChanged">
            <summary>
            Occurs when the GradientHighColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimationRender.CornerRadiusChanged">
            <summary>
            Occurs when the CornerRadius property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimationRender.BorderColorChanged">
            <summary>
            Occurs when the BorderColor property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimationRender.BorderChanged">
            <summary>
            Occurs when the Border property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimationRender.AntiAliasChanged">
            <summary>
            Occurs when the AntiAlias property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimationRender.AlphaChanged">
            <summary>
            Occurs when the Alpha property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientAnimationRender.EnabledChanged">
            <summary>
            Occurs when the Enabled property changes.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.Alpha">
            <summary>
            Gets or sets the alpha (transparancy) level (0 - 255) of the fill of the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.BackBrush">
            <summary>
            Gets or sets the linear gradient background brush of the fill of the control.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.BitmapChange">
            <summary>
            Gets or sets if there is a bitmap change.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.BitmapOffset">
            <summary>
            Gets or sets the amount the bitmap is offset with each move.
            </summary>
            <value>
            	<para>
            System.int . Specifies the amount the bitmap is offset with each move.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.GradientMode">
            <summary>
            Specifies the direction of a linear gradient.
            </summary>
            <value>
            	<para>
            System.Drawing.Drawing2D.LinearGradientMode . Specifies the direction of a linear gradient.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.GradientLowColor">
            <summary>
            Gets or sets the gradient low (darker) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient low color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.GradientHighColor">
            <summary>
            Gets or sets the gradient high (lighter) color for the control.
            </summary>
            <value>
            	<para>
            System.Drawing.Color . A Color that represents the gradient high color of the control.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.Graphics">
            <summary>
            gets or sets the graphics object for the class.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.CornerRadius">
            <summary>
            Gets or sets the corner radius for the control.
            </summary>
            <value>
            	<para>
            CornerRadius. An object of type CornerRadius representing the control's corner radius characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the CornerRadius property gets or sets their respective corner radius inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.BorderColor">
            <summary>
            Gets or sets the border color(s) for the control.
            </summary>
            <value>
            	<para>
            BorderColor. An object of type Border representing the control's border color characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the BorderColor property gets or sets their respective border colors inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.Border">
            <summary>
            Gets or sets the border for the control.
            </summary>
            <value>
            	<para>
            Border. An object of type Border representing the control's border width characteristics.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
            <remarks>
            For containers such as GradientPanel and GradientCaption, the Border property gets or sets their respective border widths inside the DisplayRectangle.
            </remarks>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.AntiAlias">
            <summary>
            Specifies the rendering hint for the control.
            </summary>
            <value>
            	<para>
            System.Boolean . Specifies if the rendering should use antialiasing.
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
            <value>
            	<para>
            System.Boolean . true if the control can respond to user interaction; otherwise, false. The default is true. 
            </para>
            	<para>
            This property is read/write. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.DisplayRectangle">
            <summary>
            The display rectangle to render to.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.AdjustedHighColor">
            <summary>
            Gets or sets the adjusted high color for the control.
            </summary>
            <value>
            <para>
            System.Drawing.Color.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientAnimationRender.AdjustedLowColor">
            <summary>
            Gets or sets the adjusted low color for the control.
            </summary>
            <value>
            <para>
            System.Drawing.Color.
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPageCollection">
            <summary>
            Contains a collection of NavigationPage objects.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.#ctor(Ascend.Windows.Forms.NavigationPane)">
            <summary>
            Initializes a new instance of the NavigationPageCollection class.
            </summary>
            <param name="parent">NavigationPane. The NavigationPane that this collection belongs to.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">System.Array. The one-dimensional Array that is the destination of the elements copied from the collection. The Array must have zero-based indexing.</param>
            <param name="index">  System.Int32. The zero-based index in the array at which copying begins.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.CopyTo(Ascend.Windows.Forms.NavigationPanePage[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array of NavigationPanePages, starting at the specified index of the target array.
            </summary>
            <param name="array">NavigationPanePage. The one-dimensional array of NavigationPanePages that is the destination of the elements copied from the collection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">  System.Int32. The zero-based index in the array at which copying begins.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an object to the end of the collection.
            </summary>
            <param name="value">  System.Object. The Object to be added to the end of the collection. The value can be null.</param>
            <returns>
            System.Int32 . The collection index at which the value has been added.
            </returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.System#Collections#IList#Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.Contains(System.Object)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">System.Object. The Object to locate in the collection. The value can be null. </param>
            <returns>
            System.Boolean . true if item is found in the collection; otherwise, false.
            </returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.Contains(Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="item">NavigationPanePage. The NavigationPanePage to locate in the collection. The value can be null. </param>
            <returns>
            System.Boolean . true if item is found in the collection; otherwise, false.
            </returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.IndexOf(System.Object)">
            <summary>
            Searches for the specified Object and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
            <param name="value">System.Object. The Object to locate in the collection. The value can be null.</param>
            <returns>
            System.Int32 . The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.IndexOf(Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            Searches for the specified NavigationPanePage and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
            <param name="item">NavigationPanePage. The NavigationPanePage to locate in the collection. The value can be null.</param>
            <returns>
            System.Int32 . The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.IndexOf(System.String)">
            <summary>
            Searches for the specified NavigationPanePage name and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
            <param name="name">The NavigationPanePage name to locate in the collection. The value can be null.</param>
            <returns>
            System.Int32 . The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">System.Int32. The zero-based index at which value should be inserted.</param>
            <param name="value">System.Object. The Object to insert. The value can be null.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">System.Object. The Object to remove from the collection. The value can be null. </param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">System.Int32. The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection.
            </summary>
            <returns>
            System.Collections.IEnumerator . An IEnumerator for the entire collection.
            </returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.Add(Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            Adds an object to the end of the collection.
            </summary>
            <param name="item">NavigationPaneNavigationButton. The NavigationPaneNavigationButton to be added to the end of the collection. The value can be null.</param>
            <returns>
            System.Int32 . The collection index at which the value has been added.
            </returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.AddRange(Ascend.Windows.Forms.NavigationPanePage[])">
            <summary>
            Adds the elements of an NavigationPage array to the end of the collection.
            </summary>
            <param name="items">NavigationPaneNavigationButton[]. The array of NavigationPaneNavigationButton to add to the end of the collection.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.Remove(Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">NavigationPage. The NavigationPaneNavigationButton to remove from the collection. The value can be null. </param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">System.Int32. The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.Insert(System.Int32,Ascend.Windows.Forms.NavigationPanePage)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">System.Int32. The zero-based index at which value should be inserted.</param>
            <param name="item">NavigationPage. The NavigationPage to insert. The value can be null.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPageCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPageCollection.Count">
            <summary>
            Gets the number of navigation pages in the collection.
            </summary>
            <value>
            <para>
            System.Int32 . The number of navigation pages in the collection.
            </para>
            <para>
            This property is read-only. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPageCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
            <value>
            <para>
            System.Boolean . true if access to the collection is synchronized (thread safe); otherwise, false. The default is false.
            </para>
            <para>
            This property is read-only. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPageCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
            <value>
            <para>
            System.Object . An object that can be used to synchronize access to the collection.
            </para>
            <para>
            This property is read-only. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPageCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
            <value>
            <para>
            System.Boolean . true if the collection has a fixed size; otherwise, false. The default is false.
            </para>
            <para>
            This property is read-only. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPageCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value>
            <para>
            System.Boolean . true if the collection is read only; otherwise, false. The default is false.
            </para>
            <para>
            This property is read-only. 
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPageCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">  System.Int32. The zero-based index of the element to get or set.</param>
            <returns>
            <para>
            System.Object . The element at the specified index.
            </para>
            <para>
            This property is read/write. 
            </para>
            </returns>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPageCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">  System.Int32. The zero-based index of the element to get or set.</param>
            <returns>
            <para>
            NavigationPanePage . The element at the specified index.
            </para>
            <para>
            This property is read/write. 
            </para>
            </returns>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPageCollection.DisplayCount">
            <summary>
            Gets the total number of NavigationPanePages that are requesting to be displayed.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPageCollection.VisibleCount">
            <summary>
            Gets the total number of NavigationPanePages that are visible.
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientNavigationButtonEventArgs">
            <summary>
            Provides data for the Selected and Deselected events of a GradientNavigationButton control.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientNavigationButtonEventArgs.#ctor(Ascend.Windows.Forms.GradientNavigationButtonAction)">
            <summary>
            Initializes a new instance of the GradientNavigationButtonEventArgs class.
            </summary>
            <param name="action">One of the GradientNavigationButtonAction values.</param>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientNavigationButtonEventArgs.Action">
            <summary>
            Gets a value indicating which event is occurring. 
            </summary>
            <value>
            One of the GradientNavigationButtonAction values.
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneEventArgs">
            <summary>
            Provides data for the Selected and Deselected events of a NavigationPane control.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneEventArgs.#ctor(Ascend.Windows.Forms.NavigationPanePage,System.Int32,System.String,Ascend.Windows.Forms.NavigationPaneAction)">
            <summary>
            Initializes a new instance of the NavigationPaneEventArgs class.
            </summary>
            <param name="navigationPanePage">The NavigationPanePage the event is occurring for.</param>
            <param name="navigationPanePageIndex">The zero-based index of NavigationPanePage in the NavigationPanePages collection.</param>
            <param name="navigationPanePageKey">The key of the NavigationPanePage in the NavigationPanePages collection.</param>
            <param name="action">One of the NavigationPaneAction values.</param>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneEventArgs.Action">
            <summary>
            Gets a value indicating which event is occurring. 
            </summary>
            <value>
            One of the NavigationPaneAction values.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneEventArgs.NavigationPanePageIndex">
            <summary>
            Gets the zero-based index of the NavigationPanePage in the NavigationPanePages collection.
            </summary>
            <value>
            The zero-based index of the NavigationPanePage in the NavigationPanePages collection.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneEventArgs.NavigationPanePageKey">
            <summary>
            Gets the key of the NavigationPanePage in the NavigationPanePages collection.
            </summary>
            <value>
            The key of the NavigationPanePage in the NavigationPanePages collection.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneEventArgs.NavigationPanePage">
            <summary>
            Gets the NavigationPanePage the event is occurring for.
            </summary>
            <value>
            The NavigationPanePage the event is occurring for.
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneAction">
            <summary>
            Defines values representing NavigationPane events
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.NavigationPaneAction.Selecting">
            <summary>
            Represents the Selecting event.
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.NavigationPaneAction.Selected">
            <summary>
            Represents the Selected event
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.NavigationPaneAction.Deselecting">
            <summary>
            Represents the Deselecting event
            </summary>
        </member>
        <member name="F:Ascend.Windows.Forms.NavigationPaneAction.Deselected">
            <summary>
            Represents the Deselected event
            </summary>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneCancelEventArgs">
            <summary>
            Provides data for the Selecting and Deselecting events of a NavigationPane control. 
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneCancelEventArgs.#ctor(Ascend.Windows.Forms.NavigationPanePage,System.Int32,System.String,System.Boolean,Ascend.Windows.Forms.NavigationPaneAction)">
            <summary>
            Initializes a new instance of the NavigationPaneCancelEventArgs class.
            </summary>
            <param name="navigationPanePage">The NavigationPanePage the event is occurring for.</param>
            <param name="navigationPanePageIndex">The zero-based index of NavigationPanePage in the NavigationPanePages collection.</param>
            <param name="navigationPanePageKey">The key of the NavigationPanePage in the NavigationPanePages collection.</param>
            <param name="cancel">true to cancel the NavigationPane change by default; otherwise, false.</param>
            <param name="action">One of the NavigationPaneAction values.</param>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCancelEventArgs.Action">
            <summary>
            Gets a value indicating which event is occurring. 
            </summary>
            <value>
            One of the NavigationPaneAction values.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCancelEventArgs.NavigationPanePageIndex">
            <summary>
            Gets the zero-based index of the NavigationPanePage in the NavigationPanePages collection.
            </summary>
            <value>
            The zero-based index of the NavigationPanePage in the NavigationPanePages collection.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCancelEventArgs.NavigationPanePageKey">
            <summary>
            Gets the key of the NavigationPanePage in the NavigationPanePages collection.
            </summary>
            <value>
            The key of the NavigationPanePage in the NavigationPanePages collection.
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.NavigationPaneCancelEventArgs.NavigationPanePage">
            <summary>
            Gets the NavigationPanePage the event is occurring for.
            </summary>
            <value>
            The NavigationPanePage the event is occurring for.
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.GradientSplitBarRender">
            <summary>
            Represents a split bar control with a gradient background.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientSplitBarRender.#ctor">
            <summary>
            Initializes a new instance of the GradientSplitBarRender class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientSplitBarRender.OnDirectionChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control direction has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnDirectionChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientSplitBarRender.OnBumpCountChanged(System.EventArgs)">
            <summary>
            Fires the event indicating that the control bump count has changed.  Inheriting controls should use this in favour of actually listening to the event, but should not forget to call base.OnBumpCountChanged() to ensure that the event is still fired for external listeners.
            </summary>
            <param name="e">A System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ascend.Windows.Forms.GradientSplitBarRender.Render(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the bumps of the control.
            </summary>
            <param name="e">A System.Windows.Forms.PaintEventArgs that contains the event data.</param>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientSplitBarRender.DirectionChanged">
            <summary>
            Occurs when the Direction property changes.
            </summary>
        </member>
        <member name="E:Ascend.Windows.Forms.GradientSplitBarRender.BumpCountChanged">
            <summary>
            Occurs when the BumpCount property changes.
            </summary>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientSplitBarRender.Direction">
            <summary>
            Specifies the direction the split bar should be drawn.
            </summary>
            <value>
            	<para>
            GradientSplitBarDirection
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
        </member>
        <member name="P:Ascend.Windows.Forms.GradientSplitBarRender.BumpCount">
            <summary>
            Specifies the number of bumps to be drawn on the split bar.
            </summary>
            <remarks>
            	<para>
            Negative numbers will be converted to 0. If a bump count number is greater than the surface allows, only the amount that can be drawn will be drawn.
            </para>
            </remarks>
            <value>
            	<para>
            System.Int32
            </para>
            	<para>
            This property is read/write.
            </para>
            </value>
        </member>
        <member name="T:Ascend.Windows.Forms.NavigationPaneButtonConverter">
            <summary>
            Provides a type converter to convert expandable objects to and from various other representations.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonConverter.#ctor">
            <summary>
            Initializes a new instance of the NavigationPaneButtonConverter class.
            </summary>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the Type that this TypeConverter is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="propertyValues">An System.Collections.IDictionary of new property values.</param>
            <returns>An System.Object representing the given System.Collections.IDictionary, or null if the object cannot be created. This method always returns null.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if changing a property on this object requires a call to System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary) to create a new value; otherwise, false.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Retrieves the set of properties for this type. By default, a type does not have any properties to return. An easy implementation of this method can call the TypeDescriptor.GetProperties method for the correct data type. 
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">The value of the object to get the properties for.</param>
            <param name="attributes">An array of MemberAttribute objects that describe the properties.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection with the properties that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="M:Ascend.Windows.Forms.NavigationPaneButtonConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true if System.ComponentModel.TypeConverter.GetProperties(System.Object) should be called to find the properties of this object; otherwise, false.</returns>
        </member>
    </members>
</doc>
